{"remainingRequest":"/Users/stavros/Documents/web/todo/node_modules/thread-loader/dist/cjs.js!/Users/stavros/Documents/web/todo/node_modules/babel-loader/lib/index.js!/Users/stavros/Documents/web/todo/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/stavros/Documents/web/todo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/stavros/Documents/web/todo/src/components/Main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/stavros/Documents/web/todo/src/components/Main.vue","mtime":1704837092971},{"path":"/Users/stavros/Documents/web/todo/babel.config.js","mtime":1694974383124},{"path":"/Users/stavros/Documents/web/todo/node_modules/cache-loader/dist/cjs.js","mtime":1694974234613},{"path":"/Users/stavros/Documents/web/todo/node_modules/thread-loader/dist/cjs.js","mtime":1694974234613},{"path":"/Users/stavros/Documents/web/todo/node_modules/babel-loader/lib/index.js","mtime":1694974236369},{"path":"/Users/stavros/Documents/web/todo/node_modules/cache-loader/dist/cjs.js","mtime":1694974234613},{"path":"/Users/stavros/Documents/web/todo/node_modules/vue-loader/lib/index.js","mtime":1694974238803}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["VSwatches","DatePicker","draggable","name","props","title","String","components","mounted","loadData","loadNotifications","data","option","notes","notesNoLabel","enableAdd","enabledLabel","enabledNotification","colour","labelText","labelColour","labels","selectedLabel","isNoteOptions","noteIndex","noteId","selectedNote","reminderDate","reminderTime","displayDateTime","dateNull","timeNull","isEdit","isTagSearch","isActiveReminder","isUpcomingReminder","activeReminders","upcomingReminders","notifications","methods","setOption","n","loadActiveReminders","addNew","setTimeout","$refs","newNoteInput","focus","closeAdd","toggleLabel","document","getElementById","toggleNotification","addLabel","value","trim","addReminder","fDate","toDateString","split","displayDate","fTime","toString","displayTime","saveNew","newNoteText","console","log","newNote","text","isCompleted","self","indexedDB","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","shimIndexedDB","request","open","onerror","event","onupgradeneeded","db","target","result","objectStore","createObjectStore","keyPath","autoIncrement","createIndex","unique","onsuccess","transaction","add","note","close","oncomplete","toggleNoteOptions","id","push","deleteNote","complete","delete","loadTags","reminder","loadUpcomingReminders","toggleEdit","saveEdit","recordRequest","get","record","updateRequest","put","deleteLabel","deleteReminder","toggleTimePanel","showTimePanel","foundNotes","openCursor","cursor","continue","deleteDB","deleteDatabase","resort","forEach","toggleTagSearch","unloadTags","loadLabels","labelIndex","index","getAll","results","r","exists","l","resultNote","dateIndex","now","Date","getTime","dateToString","actualDate1","timeToString","actualTime1","actualDateTime","toggleReminders","markCompleted","markIncomplete"],"sources":["src/components/Main.vue"],"sourcesContent":["\n\n\n\n<template>\n  <div class='container'>\n    <div class='container'>\n      <div class=\"row shadow top2\" id=\"header\">\n        <a href=\"/\"><img  class=\"logo\" src=\"../assets/logo.png\" alt=\"logo\">      </a>\n      </div>\n\n      \n      <h1 class=\"row\"><span class='section-title'></span></h1>\n  \n      <div class=\"row top2 mainContainer py-0 py-md-2\" id=\"topmenu\">\n          <button v-if='option==1' class=\"col-6 col-md-1 m-md-1 btn btn-primary\" @click='setOption(1)'><i class=\"far fa-sticky-note\"></i></button>\n          <button v-if='option!=1' class=\"col-6 col-md-1 m-md-1 btn btn-light\" @click='setOption(1)'><i class=\"far fa-sticky-note\"></i></button>\n          <button v-if='option==2 && notifications==0' class=\"col-6 col-md-1 m-md-1  btn btn-primary\" @click='setOption(2)'><i class=\"fas fa-bell\"></i></button>\n          <button v-if='option!=2 && notifications==0' class=\"col-6 col-md-1 m-md-1 btn btn-light\" @click='setOption(2)'><i class=\"fas fa-bell\"></i></button>\n  \n          <button v-if='option==2 && notifications>0' class=\"col-6 col-md-1 m-md-1 btn btn-primary\" @click='setOption(2)'><i class=\"fas fa-bell\"> </i> <small class='notification left1'> <b>({{notifications}})</b></small></button> \n          <button v-if='option!=2 && notifications>0' class=\"col-6 col-md-1 m-md-1 btn btn-light\" @click='setOption(2)'><i class=\"fas fa-bell\"> </i> <small class='notification left1'> <b>({{notifications}})</b></small></button>  \n      </div>\n  \n  \n     <div v-if=\"option==1\"  class=\"row top2 mainContainer\">\n        <button class=\"btn btn-primary2 fas fa-plus \" @click='addNew'></button>            \n        <button v-if=\"isTagSearch==false\"  class=\"left1 btn black \" @click=\"toggleTagSearch\"><i class=\"fas fa-tag\"></i> group</button>         \n        <button v-if=\"isTagSearch\"  class=\"left1 btn btn-primary2 \" @click=\"toggleTagSearch\"><i class=\"fas fa-tag\"></i> group</button>               \n        <button class=\"btn lightgrey system\"><small>click on the notes for options</small></button>\n     </div> \n  \n     \n  \n     <div v-if=\"option==1 && enableAdd\"  class=\"row top1 mainContainer\">\n        <input v-if='enableAdd' class=\"col-10 black\"  type=\"text\" ref=\"newNoteInput\">  \n    \n        <button v-if=\"!enabledLabel\" class=\"col-12 col-md btn \" @click='toggleLabel' ><i class=\"fas fa-tag\"></i></button>      \n        <!-- <button v-if=\"enabledLabel\"  class=\"col-12 col-md btn border-bottom \" @click='toggleLabel' ><i class=\"fas fa-tag\"></i></button>       -->\n        <!-- <button v-if=\"enabledNotification\" class=\"col-12 col-md btn invisible \">aaa</button> -->\n        <button v-if=\"!enabledNotification\" class=\"col-12 col-md btn \" @click='toggleNotification' ><i class=\"fas fa-bell\"></i></button>\n        \n        <transition>\n          <div v-if='enabledLabel' class=\"modalContainer centre\">\n            <div  class=\"col-12 modal1 \">\n  \n              <h2 class=\"col-12 black\"><i class=\"fas fa-tag\"></i> </h2>  \n              \n              <div class=\"col-12 top1 black\"><small><b>Add label</b></small></div>\n              <input class=\"col-10 top1\" type=\"text\" id=\"input_label\"\n              :style=\"{ color: this.colour}\"\n              >   \n              <v-swatches class=\"top1\"\n              v-model=\"colour\"                              \n              shapes=\"circles\"\n                >\n              </v-swatches>\n              <button class=\"col-10 top1 btn btn-light\" @click='addLabel'>ok</button>\n              <button class=\"col-10 top1  btn black \" @click='toggleLabel'>cancel</button>\n              <!-- <button class=\"btn col\">cancel</button> -->             \n            </div>\n          </div>\n        </transition>\n  \n        <div class=\"col-12 top1\">                  \n            <button v-if=\"labelText!=''\" class=\"btn btn-light fas fa-tag\" :style=\"{color: labelColour}\" @click='deleteLabel()'><small> {{labelText}} -</small></button>\n            <button v-if=\"reminderDate!=null\" class=\"btn darkcyan left1\" @click=\"deleteReminder\" :title=displayDateTime> <i class=\"fas fa-bell\"><small> {{displayDateTime}}  <i class=\"fas fa-trash-alt\"></i></small></i></button>          \n            \n        </div>\n  \n        \n  \n         <transition>\n            <div v-if='enabledNotification' class=\"modalContainer\">\n              <div  class=\"col-12 centre modal1\">\n                <h2 class=\"col-12 black\"><i class=\"fas fa-bell\"></i> </h2> \n                <div class=\"col-12 black\"><small><b>Add Reminder</b></small></div>\n  \n                \n                  <div class=\"col\">\n                    <date-picker id=\"datePicker\"\n                      v-model=\"reminderDate\"\n                      type=\"date\"\n                      format='DD-MM-YYYY'\n                      placeholder=\"Reminder date\"\n                      :editable=false\n                      confirm=true\n                      confirm-text='ok'\n                      >\n                        \n                    </date-picker>\n                  </div>\n  \n                  <div v-if=\"reminderDate!=null\" class=\"col top2\" >\n  \n                    <!-- time picker -->\n                    <date-picker id=\"timePicker\"\n                      v-model=\"reminderTime\"\n                      type=\"time\"\n                      format='HH:mm'\n                      placeholder=\"Reminder time \"\n                      :editable=false\n                      confirm=true\n                      confirm-text='ok'\n                      :clearable=true\n    \n                      :time-picker-options=\"{\n                        start: '00:00',\n                        step: '00:30',\n                        end: '23:30',\n                      }\"\n                      >    \n                    </date-picker>\n  \n                    <!-- no time selected -->\n                    \n                  </div>   \n  \n                  <div class=\"col-12 top1  red\" v-if=\"timeNull\"><small>Please select reminder time</small></div>                       \n  \n                <button class=\"col-10 top1 btn btn-light primary\" @click='addReminder'>add</button>\n                <button class=\"col-10 top1  btn black\" @click='toggleNotification'>cancel</button>\n              </div>  \n            </div>  \n         </transition>\n        \n        <button v-if=\"!this.enabledLabel && !this.enabledNotification\" class=\"col-12 top2 btn btn-primary\" @click='saveNew'>add</button>\n        <button v-if=\"!this.enabledLabel && !this.enabledNotification\"  class=\"col-12 top2 btn btn-primary2 black\" @click='closeAdd'>cancel</button>\n     </div> \n  \n     <div v-if=\"option==1 && !enableAdd\" id=\"notesContainer\" class=\"container top1\" >\n        \n        <!-- filter by labels is off -->\n        <span v-if=\"!isNoteOptions && !isEdit && !isTagSearch\">\n          <draggable v-model=\"notes\"  @end=\"resort\">\n          <div class=\"row  button  black top1\" v-for=\"(n,index) in notes\" :key=\"index\">\n            \n            <!-- <button class=\"btn btn-light2 left col black\" @click='toggleNoteOptions(index, n.id)'>{{index}} {{n.text}} {{n.id}} </button>                     -->\n            <template v-if=\"n.isCompleted==false\"> \n            <button class=\"btn btn-light2 left col black\" @click='toggleNoteOptions(index, n.id)'>{{n.text}}  </button>                    \n            <button v-if=\"n.labelText!=''\" class=\"btn btn-light2 left\" :style=\"{color: n.labelColour}\" :title=n.labelText> <i class=\"fas fa-tag\"> <small> {{n.labelText}}</small></i></button>\n            <button  v-if='n.reminderDate!=null' class=\"btn btn-light2 darkcyan\" :title=n.displayDateTime ><i class=\"fas fa-bell\"></i></button>\n            <button  v-if='n.reminderDate==null' class=\" btn btn-light2 darkcyan\" ><i class=\"fas fa-bell invisible\" ></i></button>                                                           \n            </template>\n  \n            <!-- if task is completed -->\n            <template v-if=\"n.isCompleted==true\">            \n            <button class=\"btn btn-light2 left col system\">{{n.text}}  </button>                                                                                \n            <button class=\"btn btn-light2 left col-1 green\" @click='markIncomplete(n.id)'><i class=\"fas fa-check-double\"></i></button>\n            <button class=\"btn btn-light2  col-1  black\" @click='deleteNote(n.id,complete=true)' ><i class=\"fa fa-trash\"></i></button>\n            </template>\n  \n  \n          </div>   \n         </draggable> \n  \n         <div v-if=\"notes==''\"  class=\"row  top1\">          \n              <p class=\"left1  primary2\">No notes found</p>\n         </div> \n        </span>\n  \n  \n        <!-- filter by labels is on -->\n         <div v-if=\"!isNoteOptions && !isEdit && isTagSearch\">\n          \n          <div class=\"row sticky-top membrane2\">\n            \n            <i class=\"left1 fas fa-tag fa-xs margin-v-auto\"></i>\n            <select v-model=\"selectedLabel\" class=\"left2  top1 \"   name=\"tagFilter\"  id=\"tagFilter\" @change=\"loadTags()\">\n              \n              <option class=\"primary \" v-for=\"(l,index) in labels\" :value=\"l\" :key=\"index\">                  \n  \n                <template v-if=\"l==''\">\n                  No label    \n                </template>\n  \n                <template v-if=\"l!=''\">\n                  {{ l }}    \n                </template>\n                 \n              </option>        \n            </select>\n            \n          </div> \n  \n                 \n            <div class=\"row   button  black top1\" v-for=\"(n,index) in notes\" :key=\"index\">          \n              <template v-if=\"n.isCompleted==false\">       \n                <button class=\"btn btn-light2 left col black\" @click='toggleNoteOptions(index, n.id)'>{{n.text}}  </button>                    \n                <button v-if=\"n.labelText!=''\" class=\" btn btn-light2 left\" :style=\"{color: n.labelColour}\" :title=n.labelText> <i class=\"fas fa-tag\"> <small> {{n.labelText}}</small></i></button>\n                <button v-if=\"n.labelText==''\" class=\" btn btn-light2 left\"  :title=n.labelText></button>\n                <button  v-if='n.reminderDate!=null' class=\" btn btn-light2 darkcyan\" :title=n.displayDateTime ><i class=\"fas fa-bell\"></i></button>\n                <button  v-if='n.reminderDate==null' class=\" btn btn-light2 darkcyan\" ><i class=\"fas fa-bell invisible\" ></i></button>                                         \n              </template>\n  \n  \n  \n              <template v-if=\"n.isCompleted==true\">   \n                <button class=\"btn btn-light2 left col system\">{{n.text}}  </button>\n                <button v-if=\"n.labelText!=''\" class=\" btn btn-light2 system left\" :title=n.labelText> <i class=\"fas fa-tag\"> <small> {{n.labelText}}</small></i></button>\n                <button v-if=\"n.labelText==''\" class=\" btn btn-light2 system left\"  :title=n.labelText></button>\n                <button  v-if='n.reminderDate!=null' class=\" btn btn-light2  system\" :title=n.displayDateTime ><i class=\"fas fa-bell\"></i></button>\n                <button  v-if='n.reminderDate==null' class=\" btn btn-light2 system\" ><i class=\"fas fa-bell invisible\" ></i></button>                                                                                                                         \n                <button class=\"btn btn-light2 left col-1 green\" @click='markIncomplete(n.id)'><i class=\"fas fa-check-double\"></i></button>                  \n                <button class=\"btn btn-light2 col-1  black\" @click='deleteNote(n.id,complete=true)' ><i class=\"fa fa-trash\"></i></button>\n                </template >\n            </div>   \n  \n  \n            <div v-if=\"notes==''\"  class=\"row top1 left1  button  black top1\">          \n              <p class=\" primary2\">No notes found</p>                         \n            </div> \n          \n  \n         \n         </div>\n        \n  \n         <span v-if=\"isNoteOptions\">\n            <div class=\"row  shadow  button  black top1\">\n              <button class=\"btn  left col black\" @click='toggleNoteOptions(noteIndex,noteId)'> {{notes[noteIndex].text}}</button>\n              <button class=\"btn  col-2  green\" @click='markCompleted(noteId)' ><i class=\"fas fa-check\"></i> <small> completed</small></button>\n              <button class=\"btn  col-1  black\" @click='toggleEdit' ><i class=\"far fa-edit\"></i></button>            \n              <button class=\"btn  col-1  black\" @click='deleteNote(noteId)' ><i class=\"fa fa-trash\"></i></button>            \n              \n            </div>  \n          </span> \n  \n          <span v-if=\"isEdit\">\n            <div class=\"row  button  black top1\">\n              <input  class=\"col-10 black\" id=\"input_edit\" type=\"text\" :value='notes[noteIndex].text'>             \n  \n               <button v-if=\"!enabledLabel\" class=\"col-12 col-md btn \" @click=\"toggleLabel\" ><i class=\"fas fa-tag\"></i></button>            \n               <button v-if=\"!enabledNotification\" class=\"col-12 col-md btn \" @click=\"toggleNotification\" ><i class=\"fas fa-bell\"></i></button>\n            </div>  \n  \n            <div class=\"row top1\">    \n              \n              <button v-if=\"labelText!=''\" class=\"btn btn-light fas fa-tag\" :style=\"{color: labelColour}\" @click='deleteLabel()'><small> {{labelText}} -</small></button>\n              <button v-if='reminderDate!=null' class=\"btn darkcyan left left1\" @click='deleteReminder()' ><i class=\"fas fa-bell\" :title=displayDateTime><small> {{displayDateTime}} <i class=\"fas fa-trash-alt\"></i></small> </i> </button>\n              \n            </div>  \n\n            <div class=\"row\">\n              <button class=\"btn btn-primary2  top1 col-md-2\" @click='saveEdit' >ok</button>            \n              <button class=\"btn btn primary top1 col-md-2  m-md-1\" @click='toggleEdit'>cancel</button>            \n            </div>\n          </span> \n  \n          <transition>\n  \n          <div v-if='enabledLabel' class=\"modalContainer centre\">\n            <div  class=\"col-12 modal1 \">\n  \n              <h2 class=\"col-12 black\"><i class=\"fas fa-tag\"></i> </h2>  \n              \n              <div class=\"col-12 top1 black\"><small><b>Add label</b></small></div>\n              <input class=\"col-10 top1\" type=\"text\" id=\"input_label\"\n              :style=\"{ color: this.colour}\"\n              >   \n              <v-swatches class=\"top1\"\n              v-model=\"colour\"                              \n              shapes=\"circles\"\n                >\n              </v-swatches>\n              <button class=\"col-10 top1 btn btn-light\" @click='addLabel'>ok</button>\n              <button class=\"col-10 top1  btn black \" @click='toggleLabel'>cancel</button>\n              <!-- <button class=\"btn col\">cancel</button> -->             \n            </div>\n          </div>\n        </transition>\n  \n        \n  \n        \n         <transition>\n            <div v-if='enabledNotification' class=\"modalContainer\">\n              <div  class=\"col-12 centre modal1\">\n                <h2 class=\"col-12 black\"><i class=\"fas fa-bell\"></i> </h2> \n                <div class=\"col-12 black\"><small><b>Add Reminder</b></small></div>\n  \n                \n                  <div class=\"col\">\n                    <date-picker\n                      v-model=\"reminderDate\"\n                      type=\"date\"\n                      format='DD-MM-YYYY'\n                      placeholder=\"Reminder date\"\n                      :editable=false\n                      confirm=true\n                      confirm-text='ok'\n                      >\n                        \n                    </date-picker>\n  \n                    \n                  </div>\n  \n                  \n                  <div  class=\"col top2\">\n                    <date-picker \n                      v-model=\"reminderTime\"\n                      type=\"time\"\n                      format='HH:mm'\n                      placeholder=\"Reminder time \"\n                      :editable=false\n                      confirm=true\n                      confirm-text='ok'\n                      :clearable=true\n    \n                      :time-picker-options=\"{\n                        start: '00:00',\n                        step: '00:30',\n                        end: '23:30',\n                      }\"\n                      >\n                        \n                    </date-picker>\n                  </div>                          \n                <button class=\"col-10 top1 btn btn-light primary\" @click='addReminder'>add</button>\n                <button class=\"col-10 top1  btn black\" @click='toggleNotification'>cancel</button>\n                \n              </div>  \n            </div>  \n         </transition>\n     </div> \n  \n    \n    <!-- Display notes with reminder -->\n     <div v-if=\"option==2\"  class=\" top1\">      \n        <div class=\"row  sticky-top mainContainer membrane2\">\n          <button v-if='isActiveReminder' class=\"btn btn-primary2 col-6 col-md-2\" @click='toggleReminders(1)' ><b>Expired</b> <small v-if=\"activeReminders>0\" class=\"primary notification\"><b> ({{activeReminders}})</b></small></button> \n          <button v-if='!isActiveReminder' class=\"btn col-6 col-md-2\" @click='toggleReminders(1)'>Expired <small v-if=\"activeReminders>0\" class=\"primary notification\"><b> ({{activeReminders}})</b></small> </button> \n  \n          <button v-if='isUpcomingReminder' class=\"btn btn-primary2 col-6 col-md-2\" @click='toggleReminders(2)'><b>Upcoming</b> <small v-if=\"upcomingReminders>0\" class=\"primary notification\"><b> ({{upcomingReminders}})</b></small> </button>          \n          <button v-if='!isUpcomingReminder' class=\"btn col-6 col-md-2\" @click='toggleReminders(2)'>Upcoming <small v-if=\"upcomingReminders>0\" class=\"notification\" ><b> ({{upcomingReminders}})</b></small></button>\n  \n          <button class=\"btn lightgrey system col left\"><small>click on the notes for options</small></button>\n        </div>\n  \n         \n        <template  v-if=\"!isNoteOptions && !isEdit\">\n          <div class=\"notesContainer\">\n            <div  class=\"row button  black top1\" v-for=\"(n,index) in notes\" :key=\"index\">          \n                <template v-if=\"n.isCompleted==false\">\n                <button class=\"btn btn-light2 left col black\" @click='toggleNoteOptions(index, n.id)'>{{n.text}}  </button>                \n                <button v-if=\"n.labelText!=''\" class=\" btn btn-light2 left\" :style=\"{color: n.labelColour}\" :title=n.labelText> <i class=\"fas fa-tag\"> <small> {{n.labelText}}</small></i></button>\n                <button v-if=\"n.labelText==''\" class=\" btn btn-light2 left\"  :title=n.labelText></button>\n                <button  v-if='n.reminderDate!=null' class=\" btn btn-light2 darkcyan\" :title=n.displayDateTime ><i class=\"fas fa-bell\"></i> <small>{{n.displayDateTime}}</small>  </button>\n                <button  v-if='n.reminderDate==null' class=\" btn btn-light2 darkcyan\" ><i class=\"fas fa-bell invisible\" ></i></button>                                         \n                </template>\n  \n                <template v-if=\"n.isCompleted==true\">\n                <button class=\"btn btn-light2 left col system\">{{n.text}}  </button>                \n                <button v-if=\"n.labelText!=''\" class=\" btn btn-light2 left system\" :title=n.labelText> <i class=\"fas fa-tag\"> <small> {{n.labelText}}</small></i></button>\n                <button v-if=\"n.labelText==''\" class=\" btn btn-light2 left\"  :title=n.labelText></button>\n                <button  v-if='n.reminderDate!=null' class=\" btn btn-light2 system\" :title=n.displayDateTime ><i class=\"fas fa-bell\"></i> <small>{{n.displayDateTime}}</small>  </button>\n                <button  v-if='n.reminderDate==null' class=\" btn btn-light2 system\" ><i class=\"fas fa-bell invisible\" ></i></button>                                                       \n                <button class=\"btn btn-light2 left col-1 green\" @click='markIncomplete(n.id)'><i class=\"fas fa-check-double\"></i></button>                  \n                <button class=\"btn btn-light2 col-1  black\" @click='deleteNote(n.id,complete=true)' ><i class=\"fa fa-trash\"></i></button>\n                </template>\n            </div>\n    \n           \n          </div>\n  \n  \n          <div v-if=\"notes==''\"  class=\"row  top1\">          \n            <p class=\"left1  primary2\">No notes found</p>\n          </div> \n        </template>  \n         \n  \n  \n  \n        <span v-if=\"isNoteOptions\">\n        <div class=\"row  shadow  button  black top1\">\n          <button class=\"btn  left col black\" @click='toggleNoteOptions(noteIndex,noteId)'> {{notes[noteIndex].text}}</button>\n          <button class=\"btn  col col-md-2  green\" @click='markCompleted(noteId)' ><i class=\"fas fa-check\"></i> <small> completed</small></button>\n          <button class=\"btn  col-1  black\" @click='toggleEdit' ><i class=\"far fa-edit\"></i></button>            \n          <button class=\"btn  col-1  black\" @click='deleteNote(noteId)' ><i class=\"fa fa-trash\"></i></button>            \n          \n        </div>  \n        </span> \n  \n        <span v-if=\"isEdit\">\n          <div class=\"row  button  black top1\">\n            <input  class=\"col-10 black\" id=\"input_edit\" type=\"text\" :value='notes[noteIndex].text'>             \n  \n              <button v-if=\"!enabledLabel\" class=\"col-12 col-md btn \" @click=\"toggleLabel\" ><i class=\"fas fa-tag\"></i></button>            \n              <button v-if=\"!enabledNotification\" class=\"col-12 col-md btn \" @click=\"toggleNotification\" ><i class=\"fas fa-bell\"></i></button>\n          </div>  \n  \n          <div class=\"row top1\">    \n            \n            <button v-if=\"labelText!=''\" class=\"btn btn-light fas fa-tag\" :style=\"{color: labelColour}\" @click='deleteLabel()'><small> {{labelText}} -</small></button>\n            <button v-if='reminderDate!=null' class=\"btn darkcyan left left1\" @click='deleteReminder()' ><i class=\"fas fa-bell\" :title=displayDateTime><small> {{displayDateTime}} <i class=\"fas fa-trash-alt\"></i> </small> </i> </button>\n            \n          </div>  \n  \n          \n          \n          <div class=\"row\">\n            <button class=\"btn btn-primary2  top1 col-md-2\" @click='saveEdit' >ok</button>            \n            <button class=\"btn btn primary top1 col-md-2  m-md-1\" @click='toggleEdit'>cancel</button>            \n          </div>\n        </span> \n  \n        <transition>\n  \n          <div v-if='enabledLabel' class=\"modalContainer centre\">\n            <div  class=\"col-12 modal1 \">\n  \n              <h2 class=\"col-12 black\"><i class=\"fas fa-tag\"></i> </h2>  \n              \n              <div class=\"col-12 top1 black\"><small><b>Add label</b></small></div>\n              <input class=\"col-10 top1\" type=\"text\" id=\"input_label\"\n              :style=\"{ color: this.colour}\"\n              >   \n              <v-swatches class=\"top1\"\n              v-model=\"colour\"                              \n              shapes=\"circles\"\n                >\n              </v-swatches>\n              <button class=\"col-10 top1 btn btn-light\" @click='addLabel'>ok</button>\n              <button class=\"col-10 top1  btn black \" @click='toggleLabel'>cancel</button>\n              <!-- <button class=\"btn col\">cancel</button> -->             \n            </div>\n          </div>\n        </transition>\n  \n        \n  \n        \n         <transition>\n            <div v-if='enabledNotification' class=\"modalContainer\">\n              <div  class=\"col-12 centre modal1\">\n                <h2 class=\"col-12 black\"><i class=\"fas fa-bell\"></i> </h2> \n                <div class=\"col-12 black\"><small><b>Add Reminder</b></small></div>\n  \n                \n                  <div class=\"col\">\n                    <date-picker\n                      v-model=\"reminderDate\"\n                      type=\"date\"\n                      format='DD-MM-YYYY'\n                      placeholder=\"Reminder date\"\n                      :editable=false\n                      confirm=true\n                      confirm-text='ok'\n                      >\n                        \n                    </date-picker>\n  \n                    \n                  </div>\n  \n                  \n                  <div  class=\"col top2\">\n                    <date-picker \n                      v-model=\"reminderTime\"\n                      type=\"time\"\n                      format='HH:mm'\n                      placeholder=\"Reminder time \"\n                      :editable=false\n                      confirm=true\n                      confirm-text='ok'\n                      :clearable=true\n    \n                      :time-picker-options=\"{\n                        start: '00:00',\n                        step: '00:30',\n                        end: '23:30',\n                      }\"\n                      >\n                        \n                    </date-picker>\n                  </div>                          \n                <button class=\"col-10 top1 btn btn-light primary\" @click='addReminder'>add</button>\n                <button class=\"col-10 top1  btn black\" @click='toggleNotification'>cancel</button>\n                \n              </div>  \n            </div>  \n         </transition>\n        \n     </div>  \n  \n     \n  <div v-if=\"notes.length>4\" class=\"row  top1\">\n      <small class=\"col lightgrey\">scroll to see all notes</small>  \n  </div>\n        \n    <!-- <button class=\"btn btn-danger\" @click='deleteDB'>Delete all notes</button>   -->\n  \n    <!-- <button class=\"btn\" @click='loadData'>read</button>   -->\n  \n  \n  \n  \n    \n  \n  \n    </div>\n  </div>\n</template>\n\n<script>\nimport VSwatches from 'vue-swatches'\nimport 'vue-swatches/dist/vue-swatches.css'\n\nimport DatePicker from 'vue2-datepicker';\nimport 'vue2-datepicker/index.css';\n  \nimport draggable from 'vuedraggable'\n  \n\nexport default {\n  name: 'Main',\n  props: {\n    title: String,\n  },\n  components: { VSwatches,DatePicker,draggable },\n\n    mounted(){\n      this.loadData();\n      this.loadNotifications();\n    },\n\n  data(){\n    return{\n      option:1,\n      notes:[],  \n      notesNoLabel:[],    \n      enableAdd:false,\n      enabledLabel:false,\n      enabledNotification:false,\n      colour:'#000000',\n      labelText:'',\n      labelColour:'',            \n      labels:[],\n      selectedLabel:'All notes',\n      isNoteOptions:false,\n      noteIndex:'',\n      noteId:'',\n      selectedNote:[],\n      reminderDate: null,      \n      reminderTime: null, \n      displayDateTime:'',             \n      dateNull:false,\n      timeNull:false,\n      isEdit:false ,\n\n      isTagSearch:false,\n      isActiveReminder:false,\n      isUpcomingReminder:false,\n      activeReminders:0,\n      upcomingReminders:0,\n      notifications:0,\n      \n\n    }\n  },\n\n  methods:{\n    setOption(n){\n        this.option=n;       \n        this.isNoteOptions=false;\n        //show all notes\n        if(n==1){\n          this.loadData();\n          this.isActiveReminder=false;\n          this.isUpcomingReminder=false;\n        }\n        //show notes with reminders\n        if(n==2){\n          \n          this.loadActiveReminders();\n          \n          this.isActiveReminder=true;\n          this.isTagSearch=false;\n        }\n    },\n\n    addNew(){\n      \n      this.enableAdd=true;\n      this.isTagSearch=false;\n      this.isNoteOptions=false;\n      setTimeout(() => {\n        this.$refs.newNoteInput.focus();  \n      }, 200);      \n    },\n\n\n    closeAdd(){\n      this.enableAdd=false;\n      this.labels=[];\n      this.reminderDate= null;        \n      this.reminderTime= null; \n      this.timeNull=false;\n      this.dateNull=false;   \n      this.displayDateTime='';\n\n    },\n\n    toggleLabel(){      \n      this.enabledLabel=!this.enabledLabel;      \n      if(this.enabledLabel){\n        setTimeout(() => {\n        document.getElementById('input_label').focus();  \n        }, 100);\n      }\n      else{\n        setTimeout(() => {\n          if(this.enableAdd){\n            this.$refs.newNoteInput.focus();  \n          }\n          else{\n            document.getElementById('input_edit').focus();\n          }\n        \n        }, 100);\n      }\n    },\n\n    toggleNotification(){      \n      this.enabledNotification=!this.enabledNotification;\n\n      //cancel is clicked\n      if(!this.enabledNotification && this.displayDateTime==''){      \n                \n          this.reminderDate= null;        \n          this.reminderTime= null; \n          this.timeNull=false;\n          this.dateNull=false;   \n      }\n      \n\n    },\n\n    addLabel(){\n      this.labelText=document.getElementById('input_label').value.trim();\n      this.labelColour=this.colour;\n      // let newLabel={labelText:labelText,colour:labelColour};\n\n      // if(labelText.trim()!=''){\n      //     this.labels.push(newLabel);\n      //     this.toggleLabel();\n      //     }\n\n      if(this.labelText!=''){\n          // this.labels.splice(0,1,newLabel);\n          this.toggleLabel();\n          }\n\n      \n      \n    },\n\n    addReminder(){\n      // this.toggleNotification();      \n      if(this.reminderDate!=null && this.reminderTime!=null){\n        this.dateNull=false;\n        this.timeNull=false;\n        this.enabledNotification=!this.enabledNotification;\n\n        //reformat date\n        let fDate=this.reminderDate.toDateString();\n        fDate=fDate.split(' ');\n        fDate=fDate[2]+' '+fDate[1]+' '+fDate[3];\n        let displayDate=fDate;\n\n        //reformat time        \n        let fTime=this.reminderTime.toString();\n        fTime=fTime.split(' ');\n        fTime=fTime[4];\n        fTime=fTime.split(':');\n        fTime=fTime[0]+':'+fTime[1];\n        let displayTime=fTime;\n        this.displayDateTime=displayDate + ' '+displayTime        \n      }\n\n      if(this.reminderDate==null){\n        this.dateNull=true;\n      }\n\n      if(this.reminderTime==null){\n        this.timeNull=true;\n      }    \n    },\n\n    saveNew(){\n      let newNoteText=this.$refs.newNoteInput.value;\n      console.log(this.labels);\n\n      let newNote;\n      newNote={text:newNoteText,\n              reminderDate:this.reminderDate,\n              reminderTime:this.reminderTime,\n              displayDateTime:this.displayDateTime,\n              labelText:this.labelText,\n              labelColour:this.labelColour,\n              isCompleted:false\n              };\n    \n      let self = this;\n      \n      //indexedDB\n      const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;      \n      console.log(indexedDB);      \n      const request= indexedDB.open('todoDatabase',1);\n      \n      //onerror\n      request.onerror=function(event){\n        console.log(event);\n      }\n\n      //onupgradeneeded\n      request.onupgradeneeded=function(event){\n        let db = event.target.result;\n        let objectStore=db.createObjectStore('notes', { keyPath: \"id\", autoIncrement: true });        \n        objectStore.createIndex('labelIndex','note.labelText',{unique:false});  \n        objectStore.createIndex('noteIndex',['note.text'],{unique:false}); \n        objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n        objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});           \n        console.log(\"Object store Created Successfully...\");\n      }\n\n      //onsuccess\n      request.onsuccess = function (event){       \n       var db = event.target.result;\n       console.log(db);\n       var transaction = db.transaction(\"notes\", \"readwrite\");\n       var objectStore = transaction.objectStore(\"notes\");     \n       \n       if(newNoteText.trim()!=''){\n       objectStore.add({ note: newNote});\n        db.close();\n        self.enableAdd=false;\n        self.labelText='',\n        self.labelColour=''\n        \n        self.reminderDate=null;\n        self.reminderTime=null;\n        self.displayDateTime='';\n\n      }\n       transaction.oncomplete = function () {   \n       self.labels=[];\n       self.selectedLabel='All notes';             \n       self.loadData();\n       self.loadNotifications();\n        };\n     }\n\n    },\n\n    toggleNoteOptions(n,id){      \n      \n      this.selectedNote=[];\n      //get selected note's id\n      this.noteId=id;\n\n\n      //set get selected note\n      for(let n of this.notes){\n\n        console.log(n.id);\n        if(n.id==id){\n          this.selectedNote.push(n);\n        }\n      }\n\n      console.log(this.notes);\n      console.log(this.selectedNote);\n      this.noteIndex=n;      \n      this.isNoteOptions=!this.isNoteOptions;\n    },\n\n    deleteNote(id,complete){      \n    //  this.notes.splice(n,1);\n    //  this.isNoteOptions=!this.isNoteOptions;\n\n\n    //delete note from db\n\n    let self=this;\n        const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n        const request = indexedDB.open(\"todoDatabase\", 1);\n      \n        request.onerror = function(){\n            console.log(\"request error deleteNote\");\n        }\n\n        request.onupgradeneeded = function(event) {\n            var db = event.target.result;\n            var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n            objectStore.createIndex('labelIndex','note.labelText',{unique:false});  \n            objectStore.createIndex('noteIndex',['note.text'],{unique:false});\n            objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n            objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});                \n            console.log(\"Object store Created Successfully...\");\n        };\n\n\n        request.onsuccess = function (event){       \n          var db = event.target.result;\n          let transaction = db.transaction('notes','readwrite');\n          const objectStore = transaction.objectStore(\"notes\");\n\n          const deleteNote = objectStore.delete(id);\n          deleteNote.onsuccess = function(){\n          console.log('note id: '+id+ ' deleted');\n          \n         }  \n            \n          transaction.oncomplete = function () {     \n\n            if(self.option==1){\n              if(self.isTagSearch){                  \n                self.selectedLabel='All notes';          \n                self.loadTags();  \n              }\n              else{\n                self.loadData();  \n\n                self.labels=[];\n                  self.reminder=[];\n                  self.reminderDate=null;\n                  self.reminderTime=null;\n                  self.displayDateTime='';\n\n              }   \n            }\n            else if(self.option==2){\n\n              if(self.isActiveReminder){\n                self.loadActiveReminders();\n               }\n               else{\n                self.loadUpcomingReminders();\n               }\n\n            }\n\n            \n            \n            if(complete==true){\n              this.isNoteOptions=false;\n              \n            }\n            else{\n              self.isNoteOptions=!self.isNoteOptions;              \n            }\n            db.close();\n            self.loadNotifications();\n          };\n          \n        }\n\n    },\n\n    toggleEdit(){               \n      this.isEdit=!this.isEdit;\n      this.isNoteOptions=!this.isNoteOptions;\n       \n      setTimeout(() => {\n        if(this.isEdit){\n\n        document.getElementById('input_edit').focus();\n        \n        this.labelText= this.notes[this.noteIndex].labelText;\n        \n        this.labelColour= this.notes[this.noteIndex].labelColour;\n      \n        \n        this.reminderDate=null;\n        this.reminderTime=null;\n\n        this.reminderDate=this.notes[this.noteIndex].reminderDate;\n        this.reminderTime=this.notes[this.noteIndex].reminderTime;\n        this.displayDateTime=this.notes[this.noteIndex].displayDateTime;\n        \n      }\n      }, 100);\n      \n\n    },\n\n    saveEdit(){\n      if(document.getElementById('input_edit').value.trim()!=''){\n\n        //updated field values\n          let text= document.getElementById('input_edit').value.trim();\n          let labelText=this.labelText;\n          let labelColour=this.labelColour;\n          let reminderDate=this.reminderDate;\n          let reminderTime=this.reminderTime;\n          let displayDateTime = this.displayDateTime;\n          \n\n        //save changes to indexedDB\n        let self=this;\n        const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n        const request = indexedDB.open(\"todoDatabase\", 1);\n                        \n        request.onerror = function(){\n            console.log(\"request error - saveEdit\");\n        }\n\n        request.onupgradeneeded = function(event) {\n            var db = event.target.result;\n            var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n            objectStore.createIndex('labelIndex',['note.labelText'],{unique:false});  \n            objectStore.createIndex('noteIndex',['note.text'],{unique:false}); \n            objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n            objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});   \n            \n            console.log(\"Object store Created Successfully...\");\n        };\n\n        \n\n        request.onsuccess = function (event){       \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\",\"readwrite\");\n          const objectStore = transaction.objectStore(\"notes\");\n\n          //get record to modify\n          const recordRequest = objectStore.get(self.noteId);\n\n          \n\n          recordRequest.onsuccess=function(){\n\n            \n            let record = recordRequest.result;\n            console.log(record);    \n                    \n            record.note.text = text;\n            record.note.reminderDate=reminderDate;\n            record.note.reminderTime=reminderTime;\n            record.note.displayDateTime=displayDateTime;            \n            record.note.labelText=labelText;\n            record.note.labelColour=labelColour;\n            record.note.isCompleted=false;\n\n\n            //save new values to indexedDB\n            const updateRequest=objectStore.put(record);\n\n            updateRequest.onsuccess=function(){\n              console.log('record updated');\n            }\n            \n          }\n          transaction.oncomplete = function () {\n            self.labelText='';\n            self.labelColour='';            \n            self.reminderDate=null;\n            self.reminderTime=null;\n            self.displayDateTime='';\n\n            //show all notes (filtered by tag or not)\n            if(self.option==1){\n              if(self.isTagSearch){    \n                if(self.selectedLabel!='All notes'){\n                  self.selectedLabel=labelText;         \n                }  \n                            \n                 self.loadTags();  \n              }\n              else{\n                self.loadData();  \n              }\n            }\n            //show notes with reminders\n            else if (self.option==2){\n               if(self.isActiveReminder){\n                self.loadActiveReminders();\n               }\n               else{\n                self.loadUpcomingReminders();\n               }\n               \n            }\n            self.loadNotifications();                                                      \n            db.close();\n          };\n\n\n          };\n\n      }\n      \n      \n      this.isEdit=!this.isEdit;\n      \n     \n    },\n\n    deleteLabel(){            \n      this.labelText='';\n      this.labelColour='';\n    },\n\n    deleteReminder(){    \n            \n      this.reminderDate=null;\n      this.reminderTime=null;\n      this.displayDateTime='';\n      if(this.notes!=''){\n        this.notes[this.noteIndex].reminder.reminderDate=null;\n        this.notes[this.noteIndex].reminder.reminderTime=null;\n      }\n      \n    },\n\n     toggleTimePanel() {\n      this.showTimePanel = !this.showTimePanel;\n    },\n\n    loadData(){\n      \n        \n        let self=this;\n        const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n        const request = indexedDB.open(\"todoDatabase\", 1);\n        \n        let foundNotes=[];\n        \n        request.onerror = function(){\n            console.log(\"database test creation error\");\n        }\n\n        request.onupgradeneeded = function(event) {\n            var db = event.target.result;\n            var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n            objectStore.createIndex('labelIndex','note.labelText',{unique:false});  \n            objectStore.createIndex('noteIndex',['note.text'],{unique:false});  \n            objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n          objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});  \n            \n            console.log(\"Object store Created Successfully...\");\n        };\n\n\n        request.onsuccess = function (event){       \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\");\n          const objectStore = transaction.objectStore(\"notes\");\n\n            // read through table\n            objectStore.openCursor().onsuccess = event => { \n              var cursor = event.target.result; \n              if (cursor) { \n                console.log('is cursor')\n                  \n                  let record;\n                  \n                     record={id:cursor.value.id,\n                             text:cursor.value.note.text,\n                             labelText:cursor.value.note.labelText,\n                             labelColour:cursor.value.note.labelColour,\n                             reminderDate:cursor.value.note.reminderDate,\n                             reminderTime:cursor.value.note.reminderTime,\n                             displayDateTime:cursor.value.note.displayDateTime,\n                             isCompleted:cursor.value.note.isCompleted\n                             }\n                             \n                  \n                  \n                  console.log(record);\n                  foundNotes.push(record);              \n                  console.log(cursor.value);\n\n                  console.log(\"id: \"+ cursor.value.id);\n                  console.log(\"text: \"+ cursor.value.note.text);\n                  \n                  cursor.continue(); \n              } else { \n                  console.log('end of table');\n              } \n            };\n\n          \n            \n          transaction.oncomplete = function () {\n            console.log(foundNotes);\n            self.notes=[];\n            for(let n of foundNotes){\n              self.notes.push(n);          \n            }\n                                    \n             console.log(self.notes)\n             \n            db.close();\n          };\n\n          \n        }\n\n    \n\n    },\n\n    deleteDB(){\n\n      const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n      \n      indexedDB.deleteDatabase(\"todoDatabase\");      \n      \n    },\n\n    resort(){\n\n      let self =this;\n      \n      this.deleteDB(); \n  \n      const request = indexedDB.open(\"todoDatabase\",1);\n\n      request.onupgradeneeded=function(event){\n        let db = event.target.result;\n        let objectStore=db.createObjectStore('notes', { keyPath: \"id\", autoIncrement: true });        \n        objectStore.createIndex('labelIndex',['note.labelText'],{unique:false});  \n        objectStore.createIndex('noteIndex',['note.text'],{unique:false});  \n        objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n        objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});  \n        \n        console.log(\"Object store Created Successfully...\");\n      }\n\n       request.onsuccess = function (event){       \n       var db = event.target.result;\n       let transaction = db.transaction(\"notes\",\"readwrite\");\n       const objectStore = transaction.objectStore(\"notes\");\n        console.log(objectStore);\n\n      \n\n      self.notes.forEach(function (n) {     \n      let newNote={ \n                   text:n.text,\n                   labelText:n.labelText,\n                   labelColour:n.labelColour,\n                   reminderDate:n.reminderDate,\n                   reminderTime:n.reminderTime,\n                   displayDateTime:n.displayDateTime,\n                   isCompleted:n.isCompleted\n                   \n                   }\n      objectStore.add({ note: newNote});\n      \n      console.log(n.text+'-'+ n.id)          \n          // objectStore.put({id: n, name: \"deevana\",branch: \"CSE\"});\n      })\n \n      transaction.oncomplete = function () {        \n        console.log('resorting updated');\n        \n        self.loadData();\n        db.close();\n\n      };\n\n    \n          \n    }\n\n    },\n\n    toggleTagSearch(){\n      this.isTagSearch=!this.isTagSearch;\n      this.enableAdd=false;\n      this.isNoteOptions=false;\n      if(this.isTagSearch){\n        this.loadTags();\n        \n      }\n      else{\n        this.unloadTags();\n      }\n      \n    }, \n\n    loadLabels(){\n      //populate labels[] with labelText values\n\n      this.labels=[];\n      this.labels.push('All notes');\n\n\n\n      let self=this;\n      const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n      const request = indexedDB.open(\"todoDatabase\", 1);\n              \n      request.onerror = function(){\n            console.log(\"database test creation error\");\n      }\n\n      request.onupgradeneeded = function(event) {\n            var db = event.target.result;\n            var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n            objectStore.createIndex('labelIndex','note.labelText',{unique:false});  \n            objectStore.createIndex('noteIndex',['note.text'],{unique:false});  \n            objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n            objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});  \n            console.log(\"Object store Created Successfully...\");\n        };\n\n\n        request.onsuccess = function (event){   \n          \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\");          \n          const objectStore = transaction.objectStore(\"notes\");\n          let labelIndex = objectStore.index(\"labelIndex\");\n          \n\n          \n\n          let request  = labelIndex.getAll();\n          \n          \n                    \n          request.onsuccess = function(){\n            console.log('success');\n            console.log(request.result);\n            let results= request.result;\n            \n            for(let r of results){\n                            \n               let exists=false;\n                self.labels.forEach(l => {\n                 if(r.note.labelText==l){\n                  exists=true;\n                 } \n                });\n\n                if(exists==false){\n                  \n                  self.labels.push(r.note.labelText);\n                }   \n\n            }            \n            \n         };\n\n          transaction.oncomplete = function () {                                  \n            db.close();\n          };\n        }           \n    },\n\n    \n    loadTags(){\n        \n        this.enableAdd=false;\n        this.notes=[];\n        this.loadLabels();\n\n      \n        \n        let self=this;\n        const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n        const request = indexedDB.open(\"todoDatabase\", 1);\n        \n        \n        \n        request.onerror = function(){\n            console.log(\"database test creation error\");\n        }\n\n        request.onupgradeneeded = function(event) {\n            var db = event.target.result;\n            var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n            objectStore.createIndex('labelIndex','note.labelText',{unique:false});  \n            objectStore.createIndex('noteIndex',['note.text'],{unique:false});  \n            objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n            objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});  \n            console.log(\"Object store Created Successfully...\");\n        };\n\n\n        request.onsuccess = function (event){   \n          \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\");          \n          const objectStore = transaction.objectStore(\"notes\");\n          let labelIndex = objectStore.index(\"labelIndex\");\n          \n\n          let request='';\n          if(self.selectedLabel=='All notes'){\n            request = labelIndex.getAll();\n\n          }\n          else{\n            request = labelIndex.getAll(self.selectedLabel);\n           \n          }\n                    \n          request.onsuccess = function(){\n            console.log('success');\n            console.log(request.result);\n            let results= request.result;\n            console.log(results);\n            for(let r of results){\n              let resultNote={id:r.id,\n                              text:r.note.text,\n                              labelText:r.note.labelText,\n                              labelColour:r.note.labelColour,\n                              reminderDate:r.note.reminderDate,\n                              reminderTime:r.note.reminderTime,\n                              displayDateTime:r.note.displayDateTime,\n                              isCompleted:r.note.isCompleted\n                              }\n\n              \n              \n\n                                         \n                //push note into notes[]\n                self.notes.push(resultNote);\n                console.log(self.notes);\n            }            \n            \n         };\n\n          transaction.oncomplete = function () {                                  \n            db.close();\n          };\n        }\n      console.log('TAGS');\n    },\n\n    unloadTags(){\n      this.loadData();\n      this.labels=[];\n      this.selectedLabel='All notes';\n    },\n\n    //counts how many reminders expired\n    loadNotifications(){\n      this.notifications=0;\n      \n      \n      let self=this;\n      const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n      const request = indexedDB.open(\"todoDatabase\", 1);\n        \n      request.onerror = function(){\n          console.log(\"database test creation error\");\n      }\n\n      request.onupgradeneeded = function(event) {\n          var db = event.target.result;\n          var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n          objectStore.createIndex('labelIndex','note.labelText',{unique:false});  \n          objectStore.createIndex('noteIndex',['note.text'],{unique:false});  \n          objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n          objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});  \n\n          console.log(\"Object store Created Successfully...\");\n      };\n\n\n        request.onsuccess = function (event){   \n          \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\");          \n          const objectStore = transaction.objectStore(\"notes\");\n          let dateIndex = objectStore.index(\"dateIndex\");\n          let request='';\n          request = dateIndex.getAll();\n                      \n          request.onsuccess = function(){\n            console.log('success');\n            console.log(request.result);\n            let results= request.result;\n            console.log(results);\n            \n            \n            let now = new Date();\n            now = now.getTime();\n            \n            \n            \n            for(let r of results){\n\n             //reconstruct date and time to compare it with current date and time   \n             let dateToString=r.note.reminderDate.toString();\n             let actualDate1=dateToString.split(' ');                \n             actualDate1=actualDate1[0]+' '+actualDate1[1]+' '+actualDate1[2]+' '+actualDate1[3];\n\n             let timeToString=r.note.reminderTime.toString();\n             let actualTime1=timeToString.split(' ');                \n             actualTime1=actualTime1[4]+' '+actualTime1[5]+' '+actualTime1[6];\n             \n             let actualDateTime=actualDate1+' '+actualTime1;\n             console.log(actualDateTime);\n\n             //reconvert to Date format\n             actualDateTime=new Date(actualDateTime);\n                                                        \n             //compare with current Date and Time\n             //if reminder has not expired, push note into notes[]\n             if(actualDateTime.getTime()<now){\n              self.notifications++;\n             }\n             \n                                            \n            }            \n            \n         };\n\n          transaction.oncomplete = function () {                                  \n            db.close();\n          };\n        }\n      \n    },\n\n    loadActiveReminders(){\n      this.activeReminders=0;  \n      this.upcomingReminders=0;\n      this.notes=[];\n      let self=this;\n      const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n      const request = indexedDB.open(\"todoDatabase\", 1);\n        \n      request.onerror = function(){\n          console.log(\"database test creation error\");\n      }\n\n      request.onupgradeneeded = function(event) {\n          var db = event.target.result;\n          var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n          objectStore.createIndex('labelIndex','note.labelText',{unique:false});  \n          objectStore.createIndex('noteIndex',['note.text'],{unique:false});  \n          objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n          objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});  \n\n          console.log(\"Object store Created Successfully...\");\n      };\n\n\n        request.onsuccess = function (event){   \n          \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\");          \n          const objectStore = transaction.objectStore(\"notes\");\n          let dateIndex = objectStore.index(\"dateIndex\");\n          let request='';\n          request = dateIndex.getAll();\n                      \n          request.onsuccess = function(){\n            console.log('success');\n            console.log(request.result);\n            let results= request.result;\n            console.log(results);\n            \n            \n            let now = new Date();\n            now = now.getTime();\n            \n            \n            \n            for(let r of results){\n\n             //reconstruct date and time to compare it with current date and time   \n             let dateToString=r.note.reminderDate.toString();\n             let actualDate1=dateToString.split(' ');                \n             actualDate1=actualDate1[0]+' '+actualDate1[1]+' '+actualDate1[2]+' '+actualDate1[3];\n\n             let timeToString=r.note.reminderTime.toString();\n             let actualTime1=timeToString.split(' ');                \n             actualTime1=actualTime1[4]+' '+actualTime1[5]+' '+actualTime1[6];\n             \n             let actualDateTime=actualDate1+' '+actualTime1;\n             console.log(actualDateTime);\n\n             //reconvert to Date format\n             actualDateTime=new Date(actualDateTime);\n\n             \n\n              let resultNote={id:r.id,\n                              text:r.note.text,\n                              labelText:r.note.labelText,\n                              labelColour:r.note.labelColour,\n                              reminderDate:r.note.reminderDate,\n                              reminderTime:r.note.reminderTime,\n                              displayDateTime:r.note.displayDateTime,\n                              isCompleted:r.note.isCompleted\n                              }\n                            \n                \n             //compare with current Date and Time\n             //if reminder has not expired, push note into notes[]\n             if(actualDateTime.getTime()<now){\n              self.notes.push(resultNote);\n              self.activeReminders++;\n              console.log(self.notes);\n             }\n             else{\n              self.upcomingReminders++;\n             }\n                                            \n            }            \n            \n         };\n\n          transaction.oncomplete = function () {                                  \n            db.close();\n          };\n        }\n      \n    },\n\n\n\n    loadUpcomingReminders(){\n\n      this.notes=[];\n      this.upcomingReminders=0;\n      this.activeReminders=0;  \n      \n      let self=this;\n      const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n      const request = indexedDB.open(\"todoDatabase\", 1);\n        \n      request.onerror = function(){\n          console.log(\"database test creation error\");\n      }\n\n      request.onupgradeneeded = function(event) {\n          var db = event.target.result;\n          var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n          objectStore.createIndex('labelIndex','note.labelText',{unique:false});  \n          objectStore.createIndex('noteIndex',['note.text'],{unique:false});  \n          objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n          objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});  \n\n          console.log(\"Object store Created Successfully...\");\n      };\n\n\n        request.onsuccess = function (event){   \n          \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\");          \n          const objectStore = transaction.objectStore(\"notes\");\n          let dateIndex = objectStore.index(\"dateIndex\");\n          let request='';\n          request = dateIndex.getAll();\n                      \n          request.onsuccess = function(){\n            console.log('success');\n            console.log(request.result);\n            let results= request.result;\n            console.log(results);\n            \n            \n            let now = new Date();\n            now = now.getTime();\n            \n            \n            \n            for(let r of results){\n\n             //reconstruct date and time to compare it with current date and time   \n             let dateToString=r.note.reminderDate.toString();\n             let actualDate1=dateToString.split(' ');                \n             actualDate1=actualDate1[0]+' '+actualDate1[1]+' '+actualDate1[2]+' '+actualDate1[3];\n\n             let timeToString=r.note.reminderTime.toString();\n             let actualTime1=timeToString.split(' ');                \n             actualTime1=actualTime1[4]+' '+actualTime1[5]+' '+actualTime1[6];\n             \n             let actualDateTime=actualDate1+' '+actualTime1;\n             console.log(actualDateTime);\n\n             //reconvert to Date format\n             actualDateTime=new Date(actualDateTime);\n\n             \n\n              let resultNote={id:r.id,\n                              text:r.note.text,\n                              labelText:r.note.labelText,\n                              labelColour:r.note.labelColour,\n                              reminderDate:r.note.reminderDate,\n                              reminderTime:r.note.reminderTime,\n                              displayDateTime:r.note.displayDateTime,\n                              isCompleted:r.note.isCompleted\n                              }\n                            \n                \n             //compare with current Date and Time\n             //if reminder has expired, push note into notes[]\n             if(actualDateTime.getTime()>now){\n              self.notes.push(resultNote);\n              self.upcomingReminders++;\n              console.log(self.notes);\n             }\n             else{\n              self.activeReminders++;\n             }\n                                            \n            }            \n            \n         };\n\n          transaction.oncomplete = function () {                                  \n            db.close();\n          };\n        }\n      //\n    },\n\n    toggleReminders(n){\n      \n      if(n==1){\n        this.isActiveReminder=true;\n        this.isUpcomingReminder=false;\n        this.loadActiveReminders();\n      }\n      else{\n        this.isActiveReminder=false;\n        this.isUpcomingReminder=true;\n        this.loadUpcomingReminders();\n      }\n\n      \n\n    },\n\n    //marks note as completed\n    markCompleted(noteId){\n      //\n      \n\n        let self=this;\n        const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n        const request = indexedDB.open(\"todoDatabase\", 1);\n                        \n        request.onerror = function(){\n            console.log(\"request error - markCompleted\");\n        }\n\n        request.onupgradeneeded = function(event) {\n            var db = event.target.result;\n            var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n            objectStore.createIndex('labelIndex',['note.labelText'],{unique:false});  \n            objectStore.createIndex('noteIndex',['note.text'],{unique:false}); \n            objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n            objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});   \n            \n            console.log(\"Object store Created Successfully...\");\n        };\n      \n        request.onsuccess = function (event){       \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\",\"readwrite\");\n          const objectStore = transaction.objectStore(\"notes\");\n\n          //get record to modify\n          const recordRequest = objectStore.get(noteId);\n\n          recordRequest.onsuccess=function(){\n\n            let record = recordRequest.result;\n            console.log(record);    \n                    \n            // record.note.text = text;\n            // record.note.reminderDate=reminderDate;\n            // record.note.reminderTime=reminderTime;\n            // record.note.displayDateTime=displayDateTime;            \n            // record.note.labelText=labelText;\n            // record.note.labelColour=labelColour;\n            record.note.isCompleted=true;\n\n\n            //save new values to indexedDB\n            const updateRequest=objectStore.put(record);\n\n            updateRequest.onsuccess=function(){\n              console.log('record updated');\n            }\n            \n          }\n          transaction.oncomplete = function () {\n          \n            //show all notes (filtered by tag or not)\n            if(self.option==1){\n              if(self.isTagSearch){    \n                if(self.selectedLabel!='All notes'){\n                  self.selectedLabel=self.selectedNote[0].labelText;                           \n                }  \n                            \n                 self.loadTags();  \n              }\n              else{\n                self.loadData();  \n              }\n            }\n            //show notes with reminders\n            else if (self.option==2){\n               if(self.isActiveReminder){\n                self.loadActiveReminders();\n               }\n               else{\n                self.loadUpcomingReminders();\n               }\n               \n            }\n          \n                                                                  \n            db.close();\n            self.isNoteOptions=false;\n          };\n\n\n          };\n\n\n\n\n    },\n\n    markIncomplete(noteId){\n      //\n       let self=this;\n        const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n        const request = indexedDB.open(\"todoDatabase\", 1);\n                        \n        request.onerror = function(){\n            console.log(\"request error - markCompleted\");\n        }\n\n        request.onupgradeneeded = function(event) {\n            var db = event.target.result;\n            var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n            objectStore.createIndex('labelIndex',['note.labelText'],{unique:false});  \n            objectStore.createIndex('noteIndex',['note.text'],{unique:false}); \n            objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n            objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});   \n            \n            console.log(\"Object store Created Successfully...\");\n        };\n      \n        request.onsuccess = function (event){       \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\",\"readwrite\");\n          const objectStore = transaction.objectStore(\"notes\");\n\n          //get record to modify\n          const recordRequest = objectStore.get(noteId);\n\n          recordRequest.onsuccess=function(){\n\n            let record = recordRequest.result;\n            console.log(record);    \n                    \n            record.note.isCompleted=false;\n\n\n            //save new values to indexedDB\n            const updateRequest=objectStore.put(record);\n\n            updateRequest.onsuccess=function(){\n              console.log('record updated');\n            }\n            \n          }\n          transaction.oncomplete = function () {\n            \n\n            //show all notes (filtered by tag or not)\n            if(self.option==1){\n              if(self.isTagSearch){    \n                console.log(self.selectedLabel);      \n                if(self.selectedLabel!='All notes'){\n                  // self.selectedLabel=self.labelText; \n                  // console.log(self.selectedLabel);                     \n                }  \n                            \n                 self.loadTags();  \n              }\n              else{\n                self.loadData();  \n              }\n            }\n            //show notes with reminders\n            else if (self.option==2){\n               if(self.isActiveReminder){\n                self.loadActiveReminders();\n               }\n               else{\n                self.loadUpcomingReminders();\n               }\n               \n            }\n                                                                  \n            db.close();\n            self.isNoteOptions=false;\n          };\n\n\n          };\n    }\n\n  }\n\n}\n</script>\n\n\n"],"mappings":";AA2fA,OAAAA,SAAA;AACA;AAEA,OAAAC,UAAA;AACA;AAEA,OAAAC,SAAA;AAGA;EACAC,IAAA;EACAC,KAAA;IACAC,KAAA,EAAAC;EACA;EACAC,UAAA;IAAAP,SAAA;IAAAC,UAAA;IAAAC;EAAA;EAEAM,QAAA;IACA,KAAAC,QAAA;IACA,KAAAC,iBAAA;EACA;EAEAC,KAAA;IACA;MACAC,MAAA;MACAC,KAAA;MACAC,YAAA;MACAC,SAAA;MACAC,YAAA;MACAC,mBAAA;MACAC,MAAA;MACAC,SAAA;MACAC,WAAA;MACAC,MAAA;MACAC,aAAA;MACAC,aAAA;MACAC,SAAA;MACAC,MAAA;MACAC,YAAA;MACAC,YAAA;MACAC,YAAA;MACAC,eAAA;MACAC,QAAA;MACAC,QAAA;MACAC,MAAA;MAEAC,WAAA;MACAC,gBAAA;MACAC,kBAAA;MACAC,eAAA;MACAC,iBAAA;MACAC,aAAA;IAGA;EACA;EAEAC,OAAA;IACAC,UAAAC,CAAA;MACA,KAAA7B,MAAA,GAAA6B,CAAA;MACA,KAAAlB,aAAA;MACA;MACA,IAAAkB,CAAA;QACA,KAAAhC,QAAA;QACA,KAAAyB,gBAAA;QACA,KAAAC,kBAAA;MACA;MACA;MACA,IAAAM,CAAA;QAEA,KAAAC,mBAAA;QAEA,KAAAR,gBAAA;QACA,KAAAD,WAAA;MACA;IACA;IAEAU,OAAA;MAEA,KAAA5B,SAAA;MACA,KAAAkB,WAAA;MACA,KAAAV,aAAA;MACAqB,UAAA;QACA,KAAAC,KAAA,CAAAC,YAAA,CAAAC,KAAA;MACA;IACA;IAGAC,SAAA;MACA,KAAAjC,SAAA;MACA,KAAAM,MAAA;MACA,KAAAM,YAAA;MACA,KAAAC,YAAA;MACA,KAAAG,QAAA;MACA,KAAAD,QAAA;MACA,KAAAD,eAAA;IAEA;IAEAoB,YAAA;MACA,KAAAjC,YAAA,SAAAA,YAAA;MACA,SAAAA,YAAA;QACA4B,UAAA;UACAM,QAAA,CAAAC,cAAA,gBAAAJ,KAAA;QACA;MACA,OACA;QACAH,UAAA;UACA,SAAA7B,SAAA;YACA,KAAA8B,KAAA,CAAAC,YAAA,CAAAC,KAAA;UACA,OACA;YACAG,QAAA,CAAAC,cAAA,eAAAJ,KAAA;UACA;QAEA;MACA;IACA;IAEAK,mBAAA;MACA,KAAAnC,mBAAA,SAAAA,mBAAA;;MAEA;MACA,UAAAA,mBAAA,SAAAY,eAAA;QAEA,KAAAF,YAAA;QACA,KAAAC,YAAA;QACA,KAAAG,QAAA;QACA,KAAAD,QAAA;MACA;IAGA;IAEAuB,SAAA;MACA,KAAAlC,SAAA,GAAA+B,QAAA,CAAAC,cAAA,gBAAAG,KAAA,CAAAC,IAAA;MACA,KAAAnC,WAAA,QAAAF,MAAA;MACA;;MAEA;MACA;MACA;MACA;;MAEA,SAAAC,SAAA;QACA;QACA,KAAA8B,WAAA;MACA;IAIA;IAEAO,YAAA;MACA;MACA,SAAA7B,YAAA,iBAAAC,YAAA;QACA,KAAAE,QAAA;QACA,KAAAC,QAAA;QACA,KAAAd,mBAAA,SAAAA,mBAAA;;QAEA;QACA,IAAAwC,KAAA,QAAA9B,YAAA,CAAA+B,YAAA;QACAD,KAAA,GAAAA,KAAA,CAAAE,KAAA;QACAF,KAAA,GAAAA,KAAA,YAAAA,KAAA,YAAAA,KAAA;QACA,IAAAG,WAAA,GAAAH,KAAA;;QAEA;QACA,IAAAI,KAAA,QAAAjC,YAAA,CAAAkC,QAAA;QACAD,KAAA,GAAAA,KAAA,CAAAF,KAAA;QACAE,KAAA,GAAAA,KAAA;QACAA,KAAA,GAAAA,KAAA,CAAAF,KAAA;QACAE,KAAA,GAAAA,KAAA,YAAAA,KAAA;QACA,IAAAE,WAAA,GAAAF,KAAA;QACA,KAAAhC,eAAA,GAAA+B,WAAA,SAAAG,WAAA;MACA;MAEA,SAAApC,YAAA;QACA,KAAAG,QAAA;MACA;MAEA,SAAAF,YAAA;QACA,KAAAG,QAAA;MACA;IACA;IAEAiC,QAAA;MACA,IAAAC,WAAA,QAAApB,KAAA,CAAAC,YAAA,CAAAQ,KAAA;MACAY,OAAA,CAAAC,GAAA,MAAA9C,MAAA;MAEA,IAAA+C,OAAA;MACAA,OAAA;QAAAC,IAAA,EAAAJ,WAAA;QACAtC,YAAA,OAAAA,YAAA;QACAC,YAAA,OAAAA,YAAA;QACAC,eAAA,OAAAA,eAAA;QACAV,SAAA,OAAAA,SAAA;QACAC,WAAA,OAAAA,WAAA;QACAkD,WAAA;MACA;MAEA,IAAAC,IAAA;;MAEA;MACA,MAAAC,SAAA,GAAAC,MAAA,CAAAD,SAAA,IAAAC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAE,eAAA,IAAAF,MAAA,CAAAG,WAAA,IAAAH,MAAA,CAAAI,aAAA;MACAX,OAAA,CAAAC,GAAA,CAAAK,SAAA;MACA,MAAAM,OAAA,GAAAN,SAAA,CAAAO,IAAA;;MAEA;MACAD,OAAA,CAAAE,OAAA,aAAAC,KAAA;QACAf,OAAA,CAAAC,GAAA,CAAAc,KAAA;MACA;;MAEA;MACAH,OAAA,CAAAI,eAAA,aAAAD,KAAA;QACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAC,WAAA,GAAAH,EAAA,CAAAI,iBAAA;UAAAC,OAAA;UAAAC,aAAA;QAAA;QACAH,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAzB,OAAA,CAAAC,GAAA;MACA;;MAEA;MACAW,OAAA,CAAAc,SAAA,aAAAX,KAAA;QACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACAnB,OAAA,CAAAC,GAAA,CAAAgB,EAAA;QACA,IAAAU,WAAA,GAAAV,EAAA,CAAAU,WAAA;QACA,IAAAP,WAAA,GAAAO,WAAA,CAAAP,WAAA;QAEA,IAAArB,WAAA,CAAAV,IAAA;UACA+B,WAAA,CAAAQ,GAAA;YAAAC,IAAA,EAAA3B;UAAA;UACAe,EAAA,CAAAa,KAAA;UACAzB,IAAA,CAAAxD,SAAA;UACAwD,IAAA,CAAApD,SAAA,OACAoD,IAAA,CAAAnD,WAAA;UAEAmD,IAAA,CAAA5C,YAAA;UACA4C,IAAA,CAAA3C,YAAA;UACA2C,IAAA,CAAA1C,eAAA;QAEA;QACAgE,WAAA,CAAAI,UAAA;UACA1B,IAAA,CAAAlD,MAAA;UACAkD,IAAA,CAAAjD,aAAA;UACAiD,IAAA,CAAA9D,QAAA;UACA8D,IAAA,CAAA7D,iBAAA;QACA;MACA;IAEA;IAEAwF,kBAAAzD,CAAA,EAAA0D,EAAA;MAEA,KAAAzE,YAAA;MACA;MACA,KAAAD,MAAA,GAAA0E,EAAA;;MAGA;MACA,SAAA1D,CAAA,SAAA5B,KAAA;QAEAqD,OAAA,CAAAC,GAAA,CAAA1B,CAAA,CAAA0D,EAAA;QACA,IAAA1D,CAAA,CAAA0D,EAAA,IAAAA,EAAA;UACA,KAAAzE,YAAA,CAAA0E,IAAA,CAAA3D,CAAA;QACA;MACA;MAEAyB,OAAA,CAAAC,GAAA,MAAAtD,KAAA;MACAqD,OAAA,CAAAC,GAAA,MAAAzC,YAAA;MACA,KAAAF,SAAA,GAAAiB,CAAA;MACA,KAAAlB,aAAA,SAAAA,aAAA;IACA;IAEA8E,WAAAF,EAAA,EAAAG,QAAA;MACA;MACA;;MAGA;;MAEA,IAAA/B,IAAA;MACA,MAAAC,SAAA,GAAAC,MAAA,CAAAD,SAAA,IAAAC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAE,eAAA,IAAAF,MAAA,CAAAG,WAAA,IAAAH,MAAA,CAAAI,aAAA;MAEA,MAAAC,OAAA,GAAAN,SAAA,CAAAO,IAAA;MAEAD,OAAA,CAAAE,OAAA;QACAd,OAAA,CAAAC,GAAA;MACA;MAEAW,OAAA,CAAAI,eAAA,aAAAD,KAAA;QACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAC,WAAA,GAAAH,EAAA,CAAAI,iBAAA;UAAAC,OAAA;UAAAC,aAAA;QAAA;QACAH,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAzB,OAAA,CAAAC,GAAA;MACA;MAGAW,OAAA,CAAAc,SAAA,aAAAX,KAAA;QACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAQ,WAAA,GAAAV,EAAA,CAAAU,WAAA;QACA,MAAAP,WAAA,GAAAO,WAAA,CAAAP,WAAA;QAEA,MAAAe,UAAA,GAAAf,WAAA,CAAAiB,MAAA,CAAAJ,EAAA;QACAE,UAAA,CAAAT,SAAA;UACA1B,OAAA,CAAAC,GAAA,eAAAgC,EAAA;QAEA;QAEAN,WAAA,CAAAI,UAAA;UAEA,IAAA1B,IAAA,CAAA3D,MAAA;YACA,IAAA2D,IAAA,CAAAtC,WAAA;cACAsC,IAAA,CAAAjD,aAAA;cACAiD,IAAA,CAAAiC,QAAA;YACA,OACA;cACAjC,IAAA,CAAA9D,QAAA;cAEA8D,IAAA,CAAAlD,MAAA;cACAkD,IAAA,CAAAkC,QAAA;cACAlC,IAAA,CAAA5C,YAAA;cACA4C,IAAA,CAAA3C,YAAA;cACA2C,IAAA,CAAA1C,eAAA;YAEA;UACA,OACA,IAAA0C,IAAA,CAAA3D,MAAA;YAEA,IAAA2D,IAAA,CAAArC,gBAAA;cACAqC,IAAA,CAAA7B,mBAAA;YACA,OACA;cACA6B,IAAA,CAAAmC,qBAAA;YACA;UAEA;UAIA,IAAAJ,QAAA;YACA,KAAA/E,aAAA;UAEA,OACA;YACAgD,IAAA,CAAAhD,aAAA,IAAAgD,IAAA,CAAAhD,aAAA;UACA;UACA4D,EAAA,CAAAa,KAAA;UACAzB,IAAA,CAAA7D,iBAAA;QACA;MAEA;IAEA;IAEAiG,WAAA;MACA,KAAA3E,MAAA,SAAAA,MAAA;MACA,KAAAT,aAAA,SAAAA,aAAA;MAEAqB,UAAA;QACA,SAAAZ,MAAA;UAEAkB,QAAA,CAAAC,cAAA,eAAAJ,KAAA;UAEA,KAAA5B,SAAA,QAAAN,KAAA,MAAAW,SAAA,EAAAL,SAAA;UAEA,KAAAC,WAAA,QAAAP,KAAA,MAAAW,SAAA,EAAAJ,WAAA;UAGA,KAAAO,YAAA;UACA,KAAAC,YAAA;UAEA,KAAAD,YAAA,QAAAd,KAAA,MAAAW,SAAA,EAAAG,YAAA;UACA,KAAAC,YAAA,QAAAf,KAAA,MAAAW,SAAA,EAAAI,YAAA;UACA,KAAAC,eAAA,QAAAhB,KAAA,MAAAW,SAAA,EAAAK,eAAA;QAEA;MACA;IAGA;IAEA+E,SAAA;MACA,IAAA1D,QAAA,CAAAC,cAAA,eAAAG,KAAA,CAAAC,IAAA;QAEA;QACA,IAAAc,IAAA,GAAAnB,QAAA,CAAAC,cAAA,eAAAG,KAAA,CAAAC,IAAA;QACA,IAAApC,SAAA,QAAAA,SAAA;QACA,IAAAC,WAAA,QAAAA,WAAA;QACA,IAAAO,YAAA,QAAAA,YAAA;QACA,IAAAC,YAAA,QAAAA,YAAA;QACA,IAAAC,eAAA,QAAAA,eAAA;;QAGA;QACA,IAAA0C,IAAA;QACA,MAAAC,SAAA,GAAAC,MAAA,CAAAD,SAAA,IAAAC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAE,eAAA,IAAAF,MAAA,CAAAG,WAAA,IAAAH,MAAA,CAAAI,aAAA;QAEA,MAAAC,OAAA,GAAAN,SAAA,CAAAO,IAAA;QAEAD,OAAA,CAAAE,OAAA;UACAd,OAAA,CAAAC,GAAA;QACA;QAEAW,OAAA,CAAAI,eAAA,aAAAD,KAAA;UACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;UACA,IAAAC,WAAA,GAAAH,EAAA,CAAAI,iBAAA;YAAAC,OAAA;YAAAC,aAAA;UAAA;UACAH,WAAA,CAAAI,WAAA;YAAAC,MAAA;UAAA;UACAL,WAAA,CAAAI,WAAA;YAAAC,MAAA;UAAA;UACAL,WAAA,CAAAI,WAAA;YAAAC,MAAA;UAAA;UACAL,WAAA,CAAAI,WAAA;YAAAC,MAAA;UAAA;UAEAzB,OAAA,CAAAC,GAAA;QACA;QAIAW,OAAA,CAAAc,SAAA,aAAAX,KAAA;UACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;UACA,IAAAQ,WAAA,GAAAV,EAAA,CAAAU,WAAA;UACA,MAAAP,WAAA,GAAAO,WAAA,CAAAP,WAAA;;UAEA;UACA,MAAAuB,aAAA,GAAAvB,WAAA,CAAAwB,GAAA,CAAAvC,IAAA,CAAA9C,MAAA;UAIAoF,aAAA,CAAAjB,SAAA;YAGA,IAAAmB,MAAA,GAAAF,aAAA,CAAAxB,MAAA;YACAnB,OAAA,CAAAC,GAAA,CAAA4C,MAAA;YAEAA,MAAA,CAAAhB,IAAA,CAAA1B,IAAA,GAAAA,IAAA;YACA0C,MAAA,CAAAhB,IAAA,CAAApE,YAAA,GAAAA,YAAA;YACAoF,MAAA,CAAAhB,IAAA,CAAAnE,YAAA,GAAAA,YAAA;YACAmF,MAAA,CAAAhB,IAAA,CAAAlE,eAAA,GAAAA,eAAA;YACAkF,MAAA,CAAAhB,IAAA,CAAA5E,SAAA,GAAAA,SAAA;YACA4F,MAAA,CAAAhB,IAAA,CAAA3E,WAAA,GAAAA,WAAA;YACA2F,MAAA,CAAAhB,IAAA,CAAAzB,WAAA;;YAGA;YACA,MAAA0C,aAAA,GAAA1B,WAAA,CAAA2B,GAAA,CAAAF,MAAA;YAEAC,aAAA,CAAApB,SAAA;cACA1B,OAAA,CAAAC,GAAA;YACA;UAEA;UACA0B,WAAA,CAAAI,UAAA;YACA1B,IAAA,CAAApD,SAAA;YACAoD,IAAA,CAAAnD,WAAA;YACAmD,IAAA,CAAA5C,YAAA;YACA4C,IAAA,CAAA3C,YAAA;YACA2C,IAAA,CAAA1C,eAAA;;YAEA;YACA,IAAA0C,IAAA,CAAA3D,MAAA;cACA,IAAA2D,IAAA,CAAAtC,WAAA;gBACA,IAAAsC,IAAA,CAAAjD,aAAA;kBACAiD,IAAA,CAAAjD,aAAA,GAAAH,SAAA;gBACA;gBAEAoD,IAAA,CAAAiC,QAAA;cACA,OACA;gBACAjC,IAAA,CAAA9D,QAAA;cACA;YACA;YACA;YAAA,KACA,IAAA8D,IAAA,CAAA3D,MAAA;cACA,IAAA2D,IAAA,CAAArC,gBAAA;gBACAqC,IAAA,CAAA7B,mBAAA;cACA,OACA;gBACA6B,IAAA,CAAAmC,qBAAA;cACA;YAEA;YACAnC,IAAA,CAAA7D,iBAAA;YACAyE,EAAA,CAAAa,KAAA;UACA;QAGA;MAEA;MAGA,KAAAhE,MAAA,SAAAA,MAAA;IAGA;IAEAkF,YAAA;MACA,KAAA/F,SAAA;MACA,KAAAC,WAAA;IACA;IAEA+F,eAAA;MAEA,KAAAxF,YAAA;MACA,KAAAC,YAAA;MACA,KAAAC,eAAA;MACA,SAAAhB,KAAA;QACA,KAAAA,KAAA,MAAAW,SAAA,EAAAiF,QAAA,CAAA9E,YAAA;QACA,KAAAd,KAAA,MAAAW,SAAA,EAAAiF,QAAA,CAAA7E,YAAA;MACA;IAEA;IAEAwF,gBAAA;MACA,KAAAC,aAAA,SAAAA,aAAA;IACA;IAEA5G,SAAA;MAGA,IAAA8D,IAAA;MACA,MAAAC,SAAA,GAAAC,MAAA,CAAAD,SAAA,IAAAC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAE,eAAA,IAAAF,MAAA,CAAAG,WAAA,IAAAH,MAAA,CAAAI,aAAA;MAEA,MAAAC,OAAA,GAAAN,SAAA,CAAAO,IAAA;MAEA,IAAAuC,UAAA;MAEAxC,OAAA,CAAAE,OAAA;QACAd,OAAA,CAAAC,GAAA;MACA;MAEAW,OAAA,CAAAI,eAAA,aAAAD,KAAA;QACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAC,WAAA,GAAAH,EAAA,CAAAI,iBAAA;UAAAC,OAAA;UAAAC,aAAA;QAAA;QACAH,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QAEAzB,OAAA,CAAAC,GAAA;MACA;MAGAW,OAAA,CAAAc,SAAA,aAAAX,KAAA;QACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAQ,WAAA,GAAAV,EAAA,CAAAU,WAAA;QACA,MAAAP,WAAA,GAAAO,WAAA,CAAAP,WAAA;;QAEA;QACAA,WAAA,CAAAiC,UAAA,GAAA3B,SAAA,GAAAX,KAAA;UACA,IAAAuC,MAAA,GAAAvC,KAAA,CAAAG,MAAA,CAAAC,MAAA;UACA,IAAAmC,MAAA;YACAtD,OAAA,CAAAC,GAAA;YAEA,IAAA4C,MAAA;YAEAA,MAAA;cAAAZ,EAAA,EAAAqB,MAAA,CAAAlE,KAAA,CAAA6C,EAAA;cACA9B,IAAA,EAAAmD,MAAA,CAAAlE,KAAA,CAAAyC,IAAA,CAAA1B,IAAA;cACAlD,SAAA,EAAAqG,MAAA,CAAAlE,KAAA,CAAAyC,IAAA,CAAA5E,SAAA;cACAC,WAAA,EAAAoG,MAAA,CAAAlE,KAAA,CAAAyC,IAAA,CAAA3E,WAAA;cACAO,YAAA,EAAA6F,MAAA,CAAAlE,KAAA,CAAAyC,IAAA,CAAApE,YAAA;cACAC,YAAA,EAAA4F,MAAA,CAAAlE,KAAA,CAAAyC,IAAA,CAAAnE,YAAA;cACAC,eAAA,EAAA2F,MAAA,CAAAlE,KAAA,CAAAyC,IAAA,CAAAlE,eAAA;cACAyC,WAAA,EAAAkD,MAAA,CAAAlE,KAAA,CAAAyC,IAAA,CAAAzB;YACA;YAIAJ,OAAA,CAAAC,GAAA,CAAA4C,MAAA;YACAO,UAAA,CAAAlB,IAAA,CAAAW,MAAA;YACA7C,OAAA,CAAAC,GAAA,CAAAqD,MAAA,CAAAlE,KAAA;YAEAY,OAAA,CAAAC,GAAA,UAAAqD,MAAA,CAAAlE,KAAA,CAAA6C,EAAA;YACAjC,OAAA,CAAAC,GAAA,YAAAqD,MAAA,CAAAlE,KAAA,CAAAyC,IAAA,CAAA1B,IAAA;YAEAmD,MAAA,CAAAC,QAAA;UACA;YACAvD,OAAA,CAAAC,GAAA;UACA;QACA;QAIA0B,WAAA,CAAAI,UAAA;UACA/B,OAAA,CAAAC,GAAA,CAAAmD,UAAA;UACA/C,IAAA,CAAA1D,KAAA;UACA,SAAA4B,CAAA,IAAA6E,UAAA;YACA/C,IAAA,CAAA1D,KAAA,CAAAuF,IAAA,CAAA3D,CAAA;UACA;UAEAyB,OAAA,CAAAC,GAAA,CAAAI,IAAA,CAAA1D,KAAA;UAEAsE,EAAA,CAAAa,KAAA;QACA;MAGA;IAIA;IAEA0B,SAAA;MAEA,MAAAlD,SAAA,GAAAC,MAAA,CAAAD,SAAA,IAAAC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAE,eAAA,IAAAF,MAAA,CAAAG,WAAA,IAAAH,MAAA,CAAAI,aAAA;MAEAL,SAAA,CAAAmD,cAAA;IAEA;IAEAC,OAAA;MAEA,IAAArD,IAAA;MAEA,KAAAmD,QAAA;MAEA,MAAA5C,OAAA,GAAAN,SAAA,CAAAO,IAAA;MAEAD,OAAA,CAAAI,eAAA,aAAAD,KAAA;QACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAC,WAAA,GAAAH,EAAA,CAAAI,iBAAA;UAAAC,OAAA;UAAAC,aAAA;QAAA;QACAH,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QAEAzB,OAAA,CAAAC,GAAA;MACA;MAEAW,OAAA,CAAAc,SAAA,aAAAX,KAAA;QACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAQ,WAAA,GAAAV,EAAA,CAAAU,WAAA;QACA,MAAAP,WAAA,GAAAO,WAAA,CAAAP,WAAA;QACApB,OAAA,CAAAC,GAAA,CAAAmB,WAAA;QAIAf,IAAA,CAAA1D,KAAA,CAAAgH,OAAA,WAAApF,CAAA;UACA,IAAA2B,OAAA;YACAC,IAAA,EAAA5B,CAAA,CAAA4B,IAAA;YACAlD,SAAA,EAAAsB,CAAA,CAAAtB,SAAA;YACAC,WAAA,EAAAqB,CAAA,CAAArB,WAAA;YACAO,YAAA,EAAAc,CAAA,CAAAd,YAAA;YACAC,YAAA,EAAAa,CAAA,CAAAb,YAAA;YACAC,eAAA,EAAAY,CAAA,CAAAZ,eAAA;YACAyC,WAAA,EAAA7B,CAAA,CAAA6B;UAEA;UACAgB,WAAA,CAAAQ,GAAA;YAAAC,IAAA,EAAA3B;UAAA;UAEAF,OAAA,CAAAC,GAAA,CAAA1B,CAAA,CAAA4B,IAAA,SAAA5B,CAAA,CAAA0D,EAAA;UACA;QACA;;QAEAN,WAAA,CAAAI,UAAA;UACA/B,OAAA,CAAAC,GAAA;UAEAI,IAAA,CAAA9D,QAAA;UACA0E,EAAA,CAAAa,KAAA;QAEA;MAIA;IAEA;IAEA8B,gBAAA;MACA,KAAA7F,WAAA,SAAAA,WAAA;MACA,KAAAlB,SAAA;MACA,KAAAQ,aAAA;MACA,SAAAU,WAAA;QACA,KAAAuE,QAAA;MAEA,OACA;QACA,KAAAuB,UAAA;MACA;IAEA;IAEAC,WAAA;MACA;;MAEA,KAAA3G,MAAA;MACA,KAAAA,MAAA,CAAA+E,IAAA;MAIA,IAAA7B,IAAA;MACA,MAAAC,SAAA,GAAAC,MAAA,CAAAD,SAAA,IAAAC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAE,eAAA,IAAAF,MAAA,CAAAG,WAAA,IAAAH,MAAA,CAAAI,aAAA;MAEA,MAAAC,OAAA,GAAAN,SAAA,CAAAO,IAAA;MAEAD,OAAA,CAAAE,OAAA;QACAd,OAAA,CAAAC,GAAA;MACA;MAEAW,OAAA,CAAAI,eAAA,aAAAD,KAAA;QACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAC,WAAA,GAAAH,EAAA,CAAAI,iBAAA;UAAAC,OAAA;UAAAC,aAAA;QAAA;QACAH,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAzB,OAAA,CAAAC,GAAA;MACA;MAGAW,OAAA,CAAAc,SAAA,aAAAX,KAAA;QAEA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAQ,WAAA,GAAAV,EAAA,CAAAU,WAAA;QACA,MAAAP,WAAA,GAAAO,WAAA,CAAAP,WAAA;QACA,IAAA2C,UAAA,GAAA3C,WAAA,CAAA4C,KAAA;QAKA,IAAApD,OAAA,GAAAmD,UAAA,CAAAE,MAAA;QAIArD,OAAA,CAAAc,SAAA;UACA1B,OAAA,CAAAC,GAAA;UACAD,OAAA,CAAAC,GAAA,CAAAW,OAAA,CAAAO,MAAA;UACA,IAAA+C,OAAA,GAAAtD,OAAA,CAAAO,MAAA;UAEA,SAAAgD,CAAA,IAAAD,OAAA;YAEA,IAAAE,MAAA;YACA/D,IAAA,CAAAlD,MAAA,CAAAwG,OAAA,CAAAU,CAAA;cACA,IAAAF,CAAA,CAAAtC,IAAA,CAAA5E,SAAA,IAAAoH,CAAA;gBACAD,MAAA;cACA;YACA;YAEA,IAAAA,MAAA;cAEA/D,IAAA,CAAAlD,MAAA,CAAA+E,IAAA,CAAAiC,CAAA,CAAAtC,IAAA,CAAA5E,SAAA;YACA;UAEA;QAEA;QAEA0E,WAAA,CAAAI,UAAA;UACAd,EAAA,CAAAa,KAAA;QACA;MACA;IACA;IAGAQ,SAAA;MAEA,KAAAzF,SAAA;MACA,KAAAF,KAAA;MACA,KAAAmH,UAAA;MAIA,IAAAzD,IAAA;MACA,MAAAC,SAAA,GAAAC,MAAA,CAAAD,SAAA,IAAAC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAE,eAAA,IAAAF,MAAA,CAAAG,WAAA,IAAAH,MAAA,CAAAI,aAAA;MAEA,MAAAC,OAAA,GAAAN,SAAA,CAAAO,IAAA;MAIAD,OAAA,CAAAE,OAAA;QACAd,OAAA,CAAAC,GAAA;MACA;MAEAW,OAAA,CAAAI,eAAA,aAAAD,KAAA;QACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAC,WAAA,GAAAH,EAAA,CAAAI,iBAAA;UAAAC,OAAA;UAAAC,aAAA;QAAA;QACAH,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAzB,OAAA,CAAAC,GAAA;MACA;MAGAW,OAAA,CAAAc,SAAA,aAAAX,KAAA;QAEA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAQ,WAAA,GAAAV,EAAA,CAAAU,WAAA;QACA,MAAAP,WAAA,GAAAO,WAAA,CAAAP,WAAA;QACA,IAAA2C,UAAA,GAAA3C,WAAA,CAAA4C,KAAA;QAGA,IAAApD,OAAA;QACA,IAAAP,IAAA,CAAAjD,aAAA;UACAwD,OAAA,GAAAmD,UAAA,CAAAE,MAAA;QAEA,OACA;UACArD,OAAA,GAAAmD,UAAA,CAAAE,MAAA,CAAA5D,IAAA,CAAAjD,aAAA;QAEA;QAEAwD,OAAA,CAAAc,SAAA;UACA1B,OAAA,CAAAC,GAAA;UACAD,OAAA,CAAAC,GAAA,CAAAW,OAAA,CAAAO,MAAA;UACA,IAAA+C,OAAA,GAAAtD,OAAA,CAAAO,MAAA;UACAnB,OAAA,CAAAC,GAAA,CAAAiE,OAAA;UACA,SAAAC,CAAA,IAAAD,OAAA;YACA,IAAAI,UAAA;cAAArC,EAAA,EAAAkC,CAAA,CAAAlC,EAAA;cACA9B,IAAA,EAAAgE,CAAA,CAAAtC,IAAA,CAAA1B,IAAA;cACAlD,SAAA,EAAAkH,CAAA,CAAAtC,IAAA,CAAA5E,SAAA;cACAC,WAAA,EAAAiH,CAAA,CAAAtC,IAAA,CAAA3E,WAAA;cACAO,YAAA,EAAA0G,CAAA,CAAAtC,IAAA,CAAApE,YAAA;cACAC,YAAA,EAAAyG,CAAA,CAAAtC,IAAA,CAAAnE,YAAA;cACAC,eAAA,EAAAwG,CAAA,CAAAtC,IAAA,CAAAlE,eAAA;cACAyC,WAAA,EAAA+D,CAAA,CAAAtC,IAAA,CAAAzB;YACA;;YAMA;YACAC,IAAA,CAAA1D,KAAA,CAAAuF,IAAA,CAAAoC,UAAA;YACAtE,OAAA,CAAAC,GAAA,CAAAI,IAAA,CAAA1D,KAAA;UACA;QAEA;QAEAgF,WAAA,CAAAI,UAAA;UACAd,EAAA,CAAAa,KAAA;QACA;MACA;MACA9B,OAAA,CAAAC,GAAA;IACA;IAEA4D,WAAA;MACA,KAAAtH,QAAA;MACA,KAAAY,MAAA;MACA,KAAAC,aAAA;IACA;IAEA;IACAZ,kBAAA;MACA,KAAA4B,aAAA;MAGA,IAAAiC,IAAA;MACA,MAAAC,SAAA,GAAAC,MAAA,CAAAD,SAAA,IAAAC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAE,eAAA,IAAAF,MAAA,CAAAG,WAAA,IAAAH,MAAA,CAAAI,aAAA;MAEA,MAAAC,OAAA,GAAAN,SAAA,CAAAO,IAAA;MAEAD,OAAA,CAAAE,OAAA;QACAd,OAAA,CAAAC,GAAA;MACA;MAEAW,OAAA,CAAAI,eAAA,aAAAD,KAAA;QACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAC,WAAA,GAAAH,EAAA,CAAAI,iBAAA;UAAAC,OAAA;UAAAC,aAAA;QAAA;QACAH,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QAEAzB,OAAA,CAAAC,GAAA;MACA;MAGAW,OAAA,CAAAc,SAAA,aAAAX,KAAA;QAEA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAQ,WAAA,GAAAV,EAAA,CAAAU,WAAA;QACA,MAAAP,WAAA,GAAAO,WAAA,CAAAP,WAAA;QACA,IAAAmD,SAAA,GAAAnD,WAAA,CAAA4C,KAAA;QACA,IAAApD,OAAA;QACAA,OAAA,GAAA2D,SAAA,CAAAN,MAAA;QAEArD,OAAA,CAAAc,SAAA;UACA1B,OAAA,CAAAC,GAAA;UACAD,OAAA,CAAAC,GAAA,CAAAW,OAAA,CAAAO,MAAA;UACA,IAAA+C,OAAA,GAAAtD,OAAA,CAAAO,MAAA;UACAnB,OAAA,CAAAC,GAAA,CAAAiE,OAAA;UAGA,IAAAM,GAAA,OAAAC,IAAA;UACAD,GAAA,GAAAA,GAAA,CAAAE,OAAA;UAIA,SAAAP,CAAA,IAAAD,OAAA;YAEA;YACA,IAAAS,YAAA,GAAAR,CAAA,CAAAtC,IAAA,CAAApE,YAAA,CAAAmC,QAAA;YACA,IAAAgF,WAAA,GAAAD,YAAA,CAAAlF,KAAA;YACAmF,WAAA,GAAAA,WAAA,YAAAA,WAAA,YAAAA,WAAA,YAAAA,WAAA;YAEA,IAAAC,YAAA,GAAAV,CAAA,CAAAtC,IAAA,CAAAnE,YAAA,CAAAkC,QAAA;YACA,IAAAkF,WAAA,GAAAD,YAAA,CAAApF,KAAA;YACAqF,WAAA,GAAAA,WAAA,YAAAA,WAAA,YAAAA,WAAA;YAEA,IAAAC,cAAA,GAAAH,WAAA,SAAAE,WAAA;YACA9E,OAAA,CAAAC,GAAA,CAAA8E,cAAA;;YAEA;YACAA,cAAA,OAAAN,IAAA,CAAAM,cAAA;;YAEA;YACA;YACA,IAAAA,cAAA,CAAAL,OAAA,KAAAF,GAAA;cACAnE,IAAA,CAAAjC,aAAA;YACA;UAGA;QAEA;QAEAuD,WAAA,CAAAI,UAAA;UACAd,EAAA,CAAAa,KAAA;QACA;MACA;IAEA;IAEAtD,oBAAA;MACA,KAAAN,eAAA;MACA,KAAAC,iBAAA;MACA,KAAAxB,KAAA;MACA,IAAA0D,IAAA;MACA,MAAAC,SAAA,GAAAC,MAAA,CAAAD,SAAA,IAAAC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAE,eAAA,IAAAF,MAAA,CAAAG,WAAA,IAAAH,MAAA,CAAAI,aAAA;MAEA,MAAAC,OAAA,GAAAN,SAAA,CAAAO,IAAA;MAEAD,OAAA,CAAAE,OAAA;QACAd,OAAA,CAAAC,GAAA;MACA;MAEAW,OAAA,CAAAI,eAAA,aAAAD,KAAA;QACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAC,WAAA,GAAAH,EAAA,CAAAI,iBAAA;UAAAC,OAAA;UAAAC,aAAA;QAAA;QACAH,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QAEAzB,OAAA,CAAAC,GAAA;MACA;MAGAW,OAAA,CAAAc,SAAA,aAAAX,KAAA;QAEA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAQ,WAAA,GAAAV,EAAA,CAAAU,WAAA;QACA,MAAAP,WAAA,GAAAO,WAAA,CAAAP,WAAA;QACA,IAAAmD,SAAA,GAAAnD,WAAA,CAAA4C,KAAA;QACA,IAAApD,OAAA;QACAA,OAAA,GAAA2D,SAAA,CAAAN,MAAA;QAEArD,OAAA,CAAAc,SAAA;UACA1B,OAAA,CAAAC,GAAA;UACAD,OAAA,CAAAC,GAAA,CAAAW,OAAA,CAAAO,MAAA;UACA,IAAA+C,OAAA,GAAAtD,OAAA,CAAAO,MAAA;UACAnB,OAAA,CAAAC,GAAA,CAAAiE,OAAA;UAGA,IAAAM,GAAA,OAAAC,IAAA;UACAD,GAAA,GAAAA,GAAA,CAAAE,OAAA;UAIA,SAAAP,CAAA,IAAAD,OAAA;YAEA;YACA,IAAAS,YAAA,GAAAR,CAAA,CAAAtC,IAAA,CAAApE,YAAA,CAAAmC,QAAA;YACA,IAAAgF,WAAA,GAAAD,YAAA,CAAAlF,KAAA;YACAmF,WAAA,GAAAA,WAAA,YAAAA,WAAA,YAAAA,WAAA,YAAAA,WAAA;YAEA,IAAAC,YAAA,GAAAV,CAAA,CAAAtC,IAAA,CAAAnE,YAAA,CAAAkC,QAAA;YACA,IAAAkF,WAAA,GAAAD,YAAA,CAAApF,KAAA;YACAqF,WAAA,GAAAA,WAAA,YAAAA,WAAA,YAAAA,WAAA;YAEA,IAAAC,cAAA,GAAAH,WAAA,SAAAE,WAAA;YACA9E,OAAA,CAAAC,GAAA,CAAA8E,cAAA;;YAEA;YACAA,cAAA,OAAAN,IAAA,CAAAM,cAAA;YAIA,IAAAT,UAAA;cAAArC,EAAA,EAAAkC,CAAA,CAAAlC,EAAA;cACA9B,IAAA,EAAAgE,CAAA,CAAAtC,IAAA,CAAA1B,IAAA;cACAlD,SAAA,EAAAkH,CAAA,CAAAtC,IAAA,CAAA5E,SAAA;cACAC,WAAA,EAAAiH,CAAA,CAAAtC,IAAA,CAAA3E,WAAA;cACAO,YAAA,EAAA0G,CAAA,CAAAtC,IAAA,CAAApE,YAAA;cACAC,YAAA,EAAAyG,CAAA,CAAAtC,IAAA,CAAAnE,YAAA;cACAC,eAAA,EAAAwG,CAAA,CAAAtC,IAAA,CAAAlE,eAAA;cACAyC,WAAA,EAAA+D,CAAA,CAAAtC,IAAA,CAAAzB;YACA;;YAGA;YACA;YACA,IAAA2E,cAAA,CAAAL,OAAA,KAAAF,GAAA;cACAnE,IAAA,CAAA1D,KAAA,CAAAuF,IAAA,CAAAoC,UAAA;cACAjE,IAAA,CAAAnC,eAAA;cACA8B,OAAA,CAAAC,GAAA,CAAAI,IAAA,CAAA1D,KAAA;YACA,OACA;cACA0D,IAAA,CAAAlC,iBAAA;YACA;UAEA;QAEA;QAEAwD,WAAA,CAAAI,UAAA;UACAd,EAAA,CAAAa,KAAA;QACA;MACA;IAEA;IAIAU,sBAAA;MAEA,KAAA7F,KAAA;MACA,KAAAwB,iBAAA;MACA,KAAAD,eAAA;MAEA,IAAAmC,IAAA;MACA,MAAAC,SAAA,GAAAC,MAAA,CAAAD,SAAA,IAAAC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAE,eAAA,IAAAF,MAAA,CAAAG,WAAA,IAAAH,MAAA,CAAAI,aAAA;MAEA,MAAAC,OAAA,GAAAN,SAAA,CAAAO,IAAA;MAEAD,OAAA,CAAAE,OAAA;QACAd,OAAA,CAAAC,GAAA;MACA;MAEAW,OAAA,CAAAI,eAAA,aAAAD,KAAA;QACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAC,WAAA,GAAAH,EAAA,CAAAI,iBAAA;UAAAC,OAAA;UAAAC,aAAA;QAAA;QACAH,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QAEAzB,OAAA,CAAAC,GAAA;MACA;MAGAW,OAAA,CAAAc,SAAA,aAAAX,KAAA;QAEA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAQ,WAAA,GAAAV,EAAA,CAAAU,WAAA;QACA,MAAAP,WAAA,GAAAO,WAAA,CAAAP,WAAA;QACA,IAAAmD,SAAA,GAAAnD,WAAA,CAAA4C,KAAA;QACA,IAAApD,OAAA;QACAA,OAAA,GAAA2D,SAAA,CAAAN,MAAA;QAEArD,OAAA,CAAAc,SAAA;UACA1B,OAAA,CAAAC,GAAA;UACAD,OAAA,CAAAC,GAAA,CAAAW,OAAA,CAAAO,MAAA;UACA,IAAA+C,OAAA,GAAAtD,OAAA,CAAAO,MAAA;UACAnB,OAAA,CAAAC,GAAA,CAAAiE,OAAA;UAGA,IAAAM,GAAA,OAAAC,IAAA;UACAD,GAAA,GAAAA,GAAA,CAAAE,OAAA;UAIA,SAAAP,CAAA,IAAAD,OAAA;YAEA;YACA,IAAAS,YAAA,GAAAR,CAAA,CAAAtC,IAAA,CAAApE,YAAA,CAAAmC,QAAA;YACA,IAAAgF,WAAA,GAAAD,YAAA,CAAAlF,KAAA;YACAmF,WAAA,GAAAA,WAAA,YAAAA,WAAA,YAAAA,WAAA,YAAAA,WAAA;YAEA,IAAAC,YAAA,GAAAV,CAAA,CAAAtC,IAAA,CAAAnE,YAAA,CAAAkC,QAAA;YACA,IAAAkF,WAAA,GAAAD,YAAA,CAAApF,KAAA;YACAqF,WAAA,GAAAA,WAAA,YAAAA,WAAA,YAAAA,WAAA;YAEA,IAAAC,cAAA,GAAAH,WAAA,SAAAE,WAAA;YACA9E,OAAA,CAAAC,GAAA,CAAA8E,cAAA;;YAEA;YACAA,cAAA,OAAAN,IAAA,CAAAM,cAAA;YAIA,IAAAT,UAAA;cAAArC,EAAA,EAAAkC,CAAA,CAAAlC,EAAA;cACA9B,IAAA,EAAAgE,CAAA,CAAAtC,IAAA,CAAA1B,IAAA;cACAlD,SAAA,EAAAkH,CAAA,CAAAtC,IAAA,CAAA5E,SAAA;cACAC,WAAA,EAAAiH,CAAA,CAAAtC,IAAA,CAAA3E,WAAA;cACAO,YAAA,EAAA0G,CAAA,CAAAtC,IAAA,CAAApE,YAAA;cACAC,YAAA,EAAAyG,CAAA,CAAAtC,IAAA,CAAAnE,YAAA;cACAC,eAAA,EAAAwG,CAAA,CAAAtC,IAAA,CAAAlE,eAAA;cACAyC,WAAA,EAAA+D,CAAA,CAAAtC,IAAA,CAAAzB;YACA;;YAGA;YACA;YACA,IAAA2E,cAAA,CAAAL,OAAA,KAAAF,GAAA;cACAnE,IAAA,CAAA1D,KAAA,CAAAuF,IAAA,CAAAoC,UAAA;cACAjE,IAAA,CAAAlC,iBAAA;cACA6B,OAAA,CAAAC,GAAA,CAAAI,IAAA,CAAA1D,KAAA;YACA,OACA;cACA0D,IAAA,CAAAnC,eAAA;YACA;UAEA;QAEA;QAEAyD,WAAA,CAAAI,UAAA;UACAd,EAAA,CAAAa,KAAA;QACA;MACA;MACA;IACA;;IAEAkD,gBAAAzG,CAAA;MAEA,IAAAA,CAAA;QACA,KAAAP,gBAAA;QACA,KAAAC,kBAAA;QACA,KAAAO,mBAAA;MACA,OACA;QACA,KAAAR,gBAAA;QACA,KAAAC,kBAAA;QACA,KAAAuE,qBAAA;MACA;IAIA;IAEA;IACAyC,cAAA1H,MAAA;MACA;;MAGA,IAAA8C,IAAA;MACA,MAAAC,SAAA,GAAAC,MAAA,CAAAD,SAAA,IAAAC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAE,eAAA,IAAAF,MAAA,CAAAG,WAAA,IAAAH,MAAA,CAAAI,aAAA;MAEA,MAAAC,OAAA,GAAAN,SAAA,CAAAO,IAAA;MAEAD,OAAA,CAAAE,OAAA;QACAd,OAAA,CAAAC,GAAA;MACA;MAEAW,OAAA,CAAAI,eAAA,aAAAD,KAAA;QACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAC,WAAA,GAAAH,EAAA,CAAAI,iBAAA;UAAAC,OAAA;UAAAC,aAAA;QAAA;QACAH,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QAEAzB,OAAA,CAAAC,GAAA;MACA;MAEAW,OAAA,CAAAc,SAAA,aAAAX,KAAA;QACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAQ,WAAA,GAAAV,EAAA,CAAAU,WAAA;QACA,MAAAP,WAAA,GAAAO,WAAA,CAAAP,WAAA;;QAEA;QACA,MAAAuB,aAAA,GAAAvB,WAAA,CAAAwB,GAAA,CAAArF,MAAA;QAEAoF,aAAA,CAAAjB,SAAA;UAEA,IAAAmB,MAAA,GAAAF,aAAA,CAAAxB,MAAA;UACAnB,OAAA,CAAAC,GAAA,CAAA4C,MAAA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACAA,MAAA,CAAAhB,IAAA,CAAAzB,WAAA;;UAGA;UACA,MAAA0C,aAAA,GAAA1B,WAAA,CAAA2B,GAAA,CAAAF,MAAA;UAEAC,aAAA,CAAApB,SAAA;YACA1B,OAAA,CAAAC,GAAA;UACA;QAEA;QACA0B,WAAA,CAAAI,UAAA;UAEA;UACA,IAAA1B,IAAA,CAAA3D,MAAA;YACA,IAAA2D,IAAA,CAAAtC,WAAA;cACA,IAAAsC,IAAA,CAAAjD,aAAA;gBACAiD,IAAA,CAAAjD,aAAA,GAAAiD,IAAA,CAAA7C,YAAA,IAAAP,SAAA;cACA;cAEAoD,IAAA,CAAAiC,QAAA;YACA,OACA;cACAjC,IAAA,CAAA9D,QAAA;YACA;UACA;UACA;UAAA,KACA,IAAA8D,IAAA,CAAA3D,MAAA;YACA,IAAA2D,IAAA,CAAArC,gBAAA;cACAqC,IAAA,CAAA7B,mBAAA;YACA,OACA;cACA6B,IAAA,CAAAmC,qBAAA;YACA;UAEA;UAGAvB,EAAA,CAAAa,KAAA;UACAzB,IAAA,CAAAhD,aAAA;QACA;MAGA;IAKA;IAEA6H,eAAA3H,MAAA;MACA;MACA,IAAA8C,IAAA;MACA,MAAAC,SAAA,GAAAC,MAAA,CAAAD,SAAA,IAAAC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAE,eAAA,IAAAF,MAAA,CAAAG,WAAA,IAAAH,MAAA,CAAAI,aAAA;MAEA,MAAAC,OAAA,GAAAN,SAAA,CAAAO,IAAA;MAEAD,OAAA,CAAAE,OAAA;QACAd,OAAA,CAAAC,GAAA;MACA;MAEAW,OAAA,CAAAI,eAAA,aAAAD,KAAA;QACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAC,WAAA,GAAAH,EAAA,CAAAI,iBAAA;UAAAC,OAAA;UAAAC,aAAA;QAAA;QACAH,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QACAL,WAAA,CAAAI,WAAA;UAAAC,MAAA;QAAA;QAEAzB,OAAA,CAAAC,GAAA;MACA;MAEAW,OAAA,CAAAc,SAAA,aAAAX,KAAA;QACA,IAAAE,EAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,MAAA;QACA,IAAAQ,WAAA,GAAAV,EAAA,CAAAU,WAAA;QACA,MAAAP,WAAA,GAAAO,WAAA,CAAAP,WAAA;;QAEA;QACA,MAAAuB,aAAA,GAAAvB,WAAA,CAAAwB,GAAA,CAAArF,MAAA;QAEAoF,aAAA,CAAAjB,SAAA;UAEA,IAAAmB,MAAA,GAAAF,aAAA,CAAAxB,MAAA;UACAnB,OAAA,CAAAC,GAAA,CAAA4C,MAAA;UAEAA,MAAA,CAAAhB,IAAA,CAAAzB,WAAA;;UAGA;UACA,MAAA0C,aAAA,GAAA1B,WAAA,CAAA2B,GAAA,CAAAF,MAAA;UAEAC,aAAA,CAAApB,SAAA;YACA1B,OAAA,CAAAC,GAAA;UACA;QAEA;QACA0B,WAAA,CAAAI,UAAA;UAGA;UACA,IAAA1B,IAAA,CAAA3D,MAAA;YACA,IAAA2D,IAAA,CAAAtC,WAAA;cACAiC,OAAA,CAAAC,GAAA,CAAAI,IAAA,CAAAjD,aAAA;cACA,IAAAiD,IAAA,CAAAjD,aAAA;gBACA;gBACA;cAAA;cAGAiD,IAAA,CAAAiC,QAAA;YACA,OACA;cACAjC,IAAA,CAAA9D,QAAA;YACA;UACA;UACA;UAAA,KACA,IAAA8D,IAAA,CAAA3D,MAAA;YACA,IAAA2D,IAAA,CAAArC,gBAAA;cACAqC,IAAA,CAAA7B,mBAAA;YACA,OACA;cACA6B,IAAA,CAAAmC,qBAAA;YACA;UAEA;UAEAvB,EAAA,CAAAa,KAAA;UACAzB,IAAA,CAAAhD,aAAA;QACA;MAGA;IACA;EAEA;AAEA"}]}