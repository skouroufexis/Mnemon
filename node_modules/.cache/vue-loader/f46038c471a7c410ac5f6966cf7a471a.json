{"remainingRequest":"/Users/stavros/Documents/web/todo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/stavros/Documents/web/todo/src/components/Main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/stavros/Documents/web/todo/src/components/Main.vue","mtime":1705364585132},{"path":"/Users/stavros/Documents/web/todo/node_modules/cache-loader/dist/cjs.js","mtime":1694974234613},{"path":"/Users/stavros/Documents/web/todo/node_modules/babel-loader/lib/index.js","mtime":1694974236369},{"path":"/Users/stavros/Documents/web/todo/node_modules/cache-loader/dist/cjs.js","mtime":1694974234613},{"path":"/Users/stavros/Documents/web/todo/node_modules/vue-loader/lib/index.js","mtime":1694974238803}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Main.vue"],"names":[],"mappings":";AAyiBA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;;AAGA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;;;AAIA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;AAIA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;;AAIA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;;;;AAKA;;;;AAIA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;;;AAIA;AACA;;AAEA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;;AAIA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;;AAGA;;;;;AAKA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA","file":"Main.vue","sourceRoot":"src/components","sourcesContent":["\n\n\n\n<template>\n  <div class='container'>\n    <div class='container'>\n      <div class=\"row shadow top2\" id=\"header\">\n        <a href=\"/\"><img  class=\"logo\" src=\"../assets/logo.png\" alt=\"logo\">      </a>\n      </div>\n\n      \n      <h1 class=\"row\"><span class='section-title'></span></h1>\n  \n      <div class=\"row top2 mainContainer background-whitesmoke  py-0 py-md-2\" id=\"topmenu\">\n          <button v-if='option==1' class=\"col-6 col-md-1 m-md-1 btn btn-primary rounded-0\" @click='setOption(1)'><i class=\"far fa-sticky-note\"></i></button>\n          <button v-if='option!=1' class=\"col-6 col-md-1 m-md-1 btn btn-light rounded-0\" @click='setOption(1)'><i class=\"far fa-sticky-note\"></i></button>\n\n          <button v-if='option==2 && notifications==0' class=\"col-6 col-md-1 m-md-1  btn btn-primary rounded-0\" @click='setOption(2)'><i class=\"fas fa-bell\"></i></button>\n          <button v-if='option!=2 && notifications==0' class=\"col-6 col-md-1 m-md-1 btn btn-light rounded-0\" @click='setOption(2)'><i class=\"fas fa-bell\"></i></button>\n  \n          <button v-if='option==2 && notifications>0' class=\"col-6 col-md-1 m-md-1 btn btn-primary rounded-0\" @click='setOption(2)'><i class=\"fas fa-bell\"> </i> <small class='notification left1'> <b>({{notifications}})</b></small></button> \n          <button v-if='option!=2 && notifications>0' class=\"col-6 col-md-1 m-md-1 btn btn-light rounded-0\" @click='setOption(2)'><i class=\"fas fa-bell\"> </i> <small class='notification left1'> <b>({{notifications}})</b></small></button>  \n          \n      </div>\n  \n  \n     <div v-if=\"option==1\"  class=\"row top2 mainContainer\">\n        <button class=\"btn btn-primary2 fas fa-plus \" @click='addNew'></button>         \n        <button v-if=\"isTagSearch==false\"  class=\"left1 btn black \" @click=\"toggleTagSearch\"><i class=\"fas fa-tag\"></i> group</button>         \n        <button v-if=\"isTagSearch\"  class=\"left1 btn btn-primary2   rounded-0 \" @click=\"toggleTagSearch\"><i class=\"fas fa-tag\"></i> group</button>                               \n     </div> \n\n     <div class=\"row\">\n        <button v-if=\"isDraggable && !isTagSearch\" @click=\"toggleDraggable\" class=\"btn  left1  primary\"><i class=\"fas fa-sort\"></i></button> \n        <button v-if=\"!isDraggable && !isTagSearch\" @click=\"toggleDraggable\" class=\"btn left1  btn  disabled\"><i class=\"fas fa-sort\"></i></button>  \n      </div> \n  \n     \n  \n     <div v-if=\"option==1 && enableAdd\"  class=\"row top1 mainContainer\">\n        <input v-if='enableAdd' class=\"col-md-10 col-12 black\"  maxlength=\"70\" type=\"text\" ref=\"newNoteInput\">  \n    \n        <button v-if=\"!enabledLabel\" class=\"col-12 col-md btn \" @click='toggleLabel' ><i class=\"fas fa-tag\"></i></button>              \n        <button v-if=\"!enabledNotification\" class=\"col-12 col-md btn \" @click='toggleNotification' ><i class=\"fas fa-bell\"></i></button>\n        \n        <transition>\n          <div v-if='enabledLabel' class=\"modalContainer centre\">\n            <div  class=\"col-12 modal1 \">\n  \n              <h2 class=\"col-12 black\"><i class=\"fas fa-tag\"></i> </h2>  \n              \n              <div class=\"col-12 top1 black\"><small><b>Add label</b></small></div>\n              <input class=\"col-10 top1\" type=\"text\" id=\"input_label\"\n              :style=\"{ color: this.colour}\"\n              >   \n              <v-swatches class=\"top1\"\n              v-model=\"colour\"                              \n              shapes=\"circles\"\n                >\n              </v-swatches>\n              <button class=\"col-10 top1 btn btn-light\" @click='addLabel'>ok</button>\n              <button class=\"col-10 top1  btn black \" @click='toggleLabel'>cancel</button>\n                         \n            </div>\n          </div>\n        </transition>\n  \n        <div class=\"col-12 top1\">                  \n            <button v-if=\"labelText!=''\" class=\"btn btn-light fas fa-tag\" :style=\"{color: labelColour}\" @click='deleteLabel()'><small> {{labelText}} -</small></button>\n            <button v-if=\"reminderDate!=null\" class=\"btn darkcyan left1\" @click=\"deleteReminder\" :title=displayDateTime> <i class=\"fas fa-bell\"><small> {{displayDateTime}}  <i class=\"fas fa-trash-alt\"></i></small></i></button>          \n            \n        </div>\n  \n        \n  \n         <transition>\n            <div v-if='enabledNotification' class=\"modalContainer\">\n              <div  class=\"col-12 centre modal1\">\n                <h2 class=\"col-12 black\"><i class=\"fas fa-bell\"></i> </h2> \n                <div class=\"col-12 black\"><small><b>Add Reminder</b></small></div>\n  \n                \n                  <div class=\"col\">\n                    <date-picker id=\"datePicker\"\n                      v-model=\"reminderDate\"\n                      type=\"date\"\n                      format='DD-MM-YYYY'\n                      placeholder=\"Reminder date\"\n                      :editable=false\n                      confirm=true\n                      confirm-text='ok'\n                      >\n                        \n                    </date-picker>\n                  </div>\n  \n                  <div v-if=\"reminderDate!=null\" class=\"col top2\" >\n  \n                    <!-- time picker -->\n                    <date-picker id=\"timePicker\"\n                      v-model=\"reminderTime\"\n                      type=\"time\"\n                      format='HH:mm'\n                      placeholder=\"Reminder time \"\n                      :editable=false\n                      confirm=true\n                      confirm-text='ok'\n                      :clearable=true\n    \n                      :time-picker-options=\"{\n                        start: '00:00',\n                        step: '00:30',\n                        end: '23:30',\n                      }\"\n                      >    \n                    </date-picker>\n  \n                    <!-- no time selected -->\n                    \n                  </div>   \n  \n                  <div class=\"col-12 top1  red\" v-if=\"timeNull\"><small>Please select reminder time</small></div>                       \n  \n                <button class=\"col-10 top1 btn btn-light primary\" @click='addReminder'>add</button>\n                <button class=\"col-10 top1  btn black\" @click='toggleNotification'>cancel</button>\n              </div>  \n            </div>  \n         </transition>\n        \n        <button v-if=\"!this.enabledLabel && !this.enabledNotification\" class=\"col-12 top2 btn btn-primary\" @click='saveNew'>add</button>\n        <button v-if=\"!this.enabledLabel && !this.enabledNotification\"  class=\"col-12 top2 btn btn-primary2 black\" @click='closeAdd'>cancel</button>\n     </div> \n  \n     <div v-if=\"option==1 && !enableAdd\" id=\"notesContainer\" class=\"container top1\" >\n        \n        <!-- filter by labels is off -->\n\n        \n        <span v-if=\"!isNoteOptions && !isEdit && !isTagSearch\">\n\n        \n\n          <draggable v-model=\"notes\" v-if=\"isDraggable\"\n          \n          @end=\"resort\"    \n          >\n            <div class=\"row  shadow-sm  button rounded-0  black my-2\" v-for=\"(n,index) in notes\" :key=\"index\">\n                    \n              \n              <template v-if=\"n.isCompleted==false\">                                \n                <button class=\"button_display_text btn background-primary-light left col-11 rounded-0\" >{{n.text}}  </button>\n                <button class=\"btn rounded-0 col-1 background-primary-light left text-md-right fas fa-sort\"></button>\n                            \n                <div class=\"col-12 \">\n                  <button v-if=\"n.labelText!=''\" class=\"btn  rounded-0 \" :style=\"{color: n.labelColour}\" :title=n.labelText> <i class=\"fas fa-tag\"> <small> {{n.labelText}}</small></i></button>\n                  <button  v-if='n.reminderDate!=null' class=\"btn  darkcyan rounded-0\" :title=n.displayDateTime ><i class=\"fas fa-bell\"><small> {{n.displayDateTime}}</small></i></button>\n                </div>                   \n              </template>            \n            </div>   \n         </draggable> \n        \n          <template v-if=\"!isDraggable\">\n            <div  class=\"row  shadow-sm  button rounded-0  black my-2\" v-for=\"(n,index) in notes\" :key=\"index\">\n                    \n              \n              <template v-if=\"n.isCompleted==false\">                                \n                <button class=\"button_display_text btn background-primary-light left col-11 rounded-0\" slot=\"header\" @click='toggleNoteOptions(index, n.id)' >{{n.text}}  </button>\n                <button class=\"btn rounded-0 col-1 background-primary-light text-left text-md-right fas fa-ellipsis-v\"   @click='toggleNoteOptions(index, n.id)'></button>\n                            \n                <div class=\"col-12 \">\n                  <button v-if=\"n.labelText!=''\" class=\"btn  rounded-0 \" :style=\"{color: n.labelColour}\" :title=n.labelText> <i class=\"fas fa-tag\"> <small> {{n.labelText}}</small></i></button>\n                  <button  v-if='n.reminderDate!=null' class=\"btn  darkcyan rounded-0\" :title=n.displayDateTime ><i class=\"fas fa-bell\"><small> {{n.displayDateTime}}</small></i></button>\n                </div>                   \n              </template>\n    \n              <!-- if task is completed -->\n              <template v-if=\"n.isCompleted==true\">            \n                <button class=\"button_display_text btn background-primary-light left col system rounded-0\">{{n.text}}  </button>             \n                <button class=\"btn background-primary-light col-2 col-md-1 rounded-0 green\" @click='markIncomplete(n.id)'><i class=\"fas fa-undo\"></i></button>\n                <button class=\"btn background-primary-light col-2 col-md-1 rounded-0 black\" @click='deleteNote(n.id,complete=true)' ><i class=\"fa fa-trash\"></i></button>              \n              </template>\n    \n    \n            </div>  \n          </template>          \n         \n        <!-- END Draggable -->\n\n         <div v-if=\"notes==''\"  class=\"row  top1\">          \n              <p class=\"left1  primary2\">No notes found</p>\n         </div> \n        </span>\n  \n  \n        <!-- filter by labels is on -->\n         <div v-if=\"!isNoteOptions && !isEdit && isTagSearch\"> \n\n          <!-- select          -->\n          <div v-if=\"notes!=''\" class=\"row sticky-top membrane2 top1\">                        \n            <i class=\"fas fa-caret-down margin-v-auto\"></i>             \n            <select v-model=\"selectedLabel\" class=\"left1\"  name=\"tagFilter\"  id=\"tagFilter\" @change=\"loadTags()\">\n               \n              <option class=\"primary\" v-for=\"(l,index) in labels\" :value=\"l\" :key=\"index\">                  \n  \n                <template v-if=\"l==''\">\n                  No label    \n                </template>\n  \n                <template v-if=\"l!=''\">\n                  {{ l }}    \n                </template>\n                 \n              </option>        \n            </select>                        \n          </div> \n  \n                 \n            <div class=\"row  shadow-sm button  black my-2 \" v-for=\"(n,index) in notes\" :key=\"index\">          \n              <template v-if=\"n.isCompleted==false\">       \n                <button class=\"col-11 button_display_text btn background-primary-light left  rounded-0\" @click='toggleNoteOptions(index, n.id)' >{{n.text}}</button>\n                <button class=\"col-1 btn rounded-0 background-primary-light text-left text-md-right fas fa-ellipsis-v\" @click='toggleNoteOptions(index, n.id)'></button>\n                <div class=\"col-12 \">\n                  <button v-if=\"n.labelText!=''\" class=\"btn  rounded-0 \" :style=\"{color: n.labelColour}\" :title=n.labelText> <i class=\"fas fa-tag\"> <small> {{n.labelText}}</small></i></button>\n                  <button  v-if='n.reminderDate!=null' class=\"btn  darkcyan rounded-0\" :title=n.displayDateTime ><i class=\"fas fa-bell\"><small> {{n.displayDateTime}}</small></i></button>\n                </div>                 \n              </template>\n\n              <template v-if=\"n.isCompleted==true\">                   \n                <button class=\"button_display_text btn background-primary-light left col system rounded-0\">{{n.text}}  </button>             \n                <button class=\"btn background-primary-light col-2 col-md-1 rounded-0 green\" @click='markIncomplete(n.id)'><i class=\"fas fa-undo\"></i></button>\n                <button class=\"btn background-primary-light col-2 col-md-1 rounded-0 black\" @click='deleteNote(n.id,complete=true)' ><i class=\"fa fa-trash\"></i></button>            \n              </template >  \n            </div>  \n\n            <div v-if=\"notes==''\"  class=\"row top1   button  black top1\">          \n              <p class=\" primary2\">No notes found</p>                         \n            </div> \n\n         </div>\n        \n  \n         <span v-if=\"isNoteOptions\">\n            <div class=\"row  shadow  button  black top1\">\n              <!-- <button class=\"btn background-primary-light left col-12 black noteTextButton\" @click='toggleNoteOptions(noteIndex,noteId)'> {{notes[noteIndex].text}}</button> -->\n              <button class=\"btn col-12 text-right  fas fa-ellipsis-v\" @click='toggleNoteOptions(noteIndex,noteId)'></button>\n\n              <button class=\"btn green background-green rounded-0 col-12   top1\" @click='markCompleted(noteId)' ><i class=\"fas fa-check-double\"></i></button>\n              <button class=\"btn primary background-light rounded-0 col-12  black\" @click='toggleEdit' ><i class=\"far fa-edit\"></i></button>            \n              <button class=\"btn rounded-0 col-12\" @click='deleteNote(noteId)' ><i class=\"fa fa-trash\"></i></button>                                        \n            </div>  \n          </span> \n  \n          <span v-if=\"isEdit\">\n            <div class=\"row  button  black top1\">\n              <input  class=\"col-10 black\" id=\"input_edit\" type=\"text\" :value='notes[noteIndex].text'>             \n  \n               <button v-if=\"!enabledLabel\" class=\"col-12 col-md btn \" @click=\"toggleLabel\" ><i class=\"fas fa-tag\"></i></button>            \n               <button v-if=\"!enabledNotification\" class=\"col-12 col-md btn \" @click=\"toggleNotification\" ><i class=\"fas fa-bell\"></i></button>\n            </div>  \n  \n            <div class=\"row top1\">    \n              \n              <button v-if=\"labelText!=''\" class=\"btn btn-light fas fa-tag\" :style=\"{color: labelColour}\" @click='deleteLabel()'><small> {{labelText}} -</small></button>\n              <button v-if='reminderDate!=null' class=\"btn darkcyan left left1\" @click='deleteReminder()' ><i class=\"fas fa-bell\" :title=displayDateTime><small> {{displayDateTime}} <i class=\"fas fa-trash-alt\"></i></small> </i> </button>\n              \n            </div>  \n\n            <div class=\"row\">\n              <button class=\"btn btn-primary2  top1 col-md-2\" @click='saveEdit' >ok</button>            \n              <button class=\"btn btn primary top1 col-md-2  m-md-1\" @click='toggleEdit'>cancel</button>            \n            </div>\n          </span> \n  \n          <transition>\n  \n          <div v-if='enabledLabel' class=\"modalContainer centre\">\n            <div  class=\"col-12 modal1 \">\n  \n              <h2 class=\"col-12 black\"><i class=\"fas fa-tag\"></i> </h2>  \n              \n              <div class=\"col-12 top1 black\"><small><b>Add label</b></small></div>\n              <input class=\"col-10 top1\" type=\"text\" id=\"input_label\"\n              :style=\"{ color: this.colour}\"\n              >   \n              <v-swatches class=\"top1\"\n              v-model=\"colour\"                              \n              shapes=\"circles\"\n                >\n              </v-swatches>\n              <button class=\"col-10 top1 btn btn-light\" @click='addLabel'>ok</button>\n              <button class=\"col-10 top1  btn black \" @click='toggleLabel'>cancel</button>\n              <!-- <button class=\"btn col\">cancel</button> -->             \n            </div>\n          </div>\n        </transition>\n  \n         <transition>\n            <div v-if='enabledNotification' class=\"modalContainer\">\n              <div  class=\"col-12 centre modal1\">\n                <h2 class=\"col-12 black\"><i class=\"fas fa-bell\"></i> </h2> \n                <div class=\"col-12 black\"><small><b>Add Reminder</b></small></div>\n  \n                \n                  <div class=\"col\">\n                    <date-picker\n                      v-model=\"reminderDate\"\n                      type=\"date\"\n                      format='DD-MM-YYYY'\n                      placeholder=\"Reminder date\"\n                      :editable=false\n                      confirm=true\n                      confirm-text='ok'\n                      >\n                        \n                    </date-picker>\n  \n                    \n                  </div>\n  \n                  \n                  <div  class=\"col top2\">\n                    <date-picker \n                      v-model=\"reminderTime\"\n                      type=\"time\"\n                      format='HH:mm'\n                      placeholder=\"Reminder time \"\n                      :editable=false\n                      confirm=true\n                      confirm-text='ok'\n                      :clearable=true\n    \n                      :time-picker-options=\"{\n                        start: '00:00',\n                        step: '00:30',\n                        end: '23:30',\n                      }\"\n                      >\n                        \n                    </date-picker>\n\n                  </div>        \n\n                  <div class=\"col-12 top1  red\" v-if=\"timeNull\"><small>Please select reminder time</small></div>\n\n                <button class=\"col-10 top1 btn btn-light primary\" @click='addReminder'>add</button>\n                <button class=\"col-10 top1  btn black\" @click='toggleNotification'>cancel</button>\n                \n              </div>  \n            </div>  \n         </transition>\n     </div> \n  \n    \n    <!-- Display notes with reminder -->\n     <div v-if=\"option==2\"  class=\" top1\">      \n        <div class=\"row  sticky-top mainContainer membrane2  \">\n          <button v-if='isActiveReminder' class=\"btn  d-md-none col-6\" @click='toggleReminders(1)' ><b>| Expired</b> <small v-if=\"activeReminders>0\" class=\"primary notification\"><b> &nbsp;({{activeReminders}})</b></small></button> \n          <button v-if='!isActiveReminder' class=\"btn d-md-none col-6\" @click='toggleReminders(1)'>Expired <small v-if=\"activeReminders>0\" class=\"primary notification\"><b> &nbsp;({{activeReminders}})</b></small> </button> \n  \n          <button v-if='isUpcomingReminder' class=\"btn d-md-none col-6\" @click='toggleReminders(2)'><b>| Upcoming</b> <small v-if=\"upcomingReminders>0\" class=\"primary notification\"><b> &nbsp;({{upcomingReminders}})</b></small></button>          \n          <button v-if='!isUpcomingReminder' class=\"btn d-md-none col-6\" @click='toggleReminders(2)'>Upcoming <small v-if=\"upcomingReminders>0\" class=\"notification\" ><b> &nbsp;({{upcomingReminders}})</b></small></button>\n\n          <button v-if='isActiveReminder' class=\"btn  d-none d-md-block  text-md-left\" style=\"width:120px\" @click='toggleReminders(1)' ><b>| Expired</b> <small v-if=\"activeReminders>0\" class=\"primary notification\"><b>  &nbsp;({{activeReminders}})</b></small></button> \n          <button v-if='!isActiveReminder' class=\"btn d-none d-md-block  text-md-left\" style=\"width:120px\" @click='toggleReminders(1)'>Expired <small v-if=\"activeReminders>0\" class=\"primary notification\"><b> &nbsp;({{activeReminders}})</b></small> </button> \n  \n          <button v-if='isUpcomingReminder' class=\"btn d-none d-md-block  text-md-left\" style=\"width:120px\" @click='toggleReminders(2)'><b>| Upcoming</b> <small v-if=\"upcomingReminders>0\" class=\"primary notification\"><b> &nbsp;({{upcomingReminders}})</b></small> </button>          \n          <button v-if='!isUpcomingReminder' class=\"btn d-none  d-md-block text-md-left\" style=\"width:120px\" @click='toggleReminders(2)'>Upcoming  <small v-if=\"upcomingReminders>0\" class=\"notification\" ><b>&nbsp;({{upcomingReminders}})</b></small></button>          \n        </div>\n  \n        <div v-if=\"notes==''\"  class=\"row   top1\">          \n            <p class=\"col left1 text-center text-md-left primary2\">No notes found</p>\n        </div>\n         \n        <template  v-if=\"!isNoteOptions && !isEdit\">\n          <div class=\"notesContainer\">\n            <div  class=\"row button  black top1\" v-for=\"(n,index) in notes\" :key=\"index\">          \n                <template v-if=\"n.isCompleted==false\">\n                  <!-- <button class=\"button_display_text btn background-primary-light left col black\" @click='toggleNoteOptions(index, n.id)'>{{n.text}}  </button>                \n                  <button v-if=\"n.labelText!=''\" class=\" btn btn-light2 left\" :style=\"{color: n.labelColour}\" :title=n.labelText> <i class=\"fas fa-tag\"> <small> {{n.labelText}}</small></i></button>\n                  <button v-if=\"n.labelText==''\" class=\" btn btn-light2 left\"  :title=n.labelText></button>\n                  <button  v-if='n.reminderDate!=null' class=\" btn btn-light2 darkcyan\" :title=n.displayDateTime ><i class=\"fas fa-bell\"></i> <small>{{n.displayDateTime}}</small>  </button>\n                  <button  v-if='n.reminderDate==null' class=\" btn btn-light2 darkcyan\" ><i class=\"fas fa-bell invisible\" ></i></button>                                          -->\n\n                  <button class=\"button_display_text btn background-primary-light left col-11 rounded-0\" @click='toggleNoteOptions(index, n.id)' >{{n.text}}  </button>\n                  <button class=\"btn rounded-0 col-1 background-primary-light text-left text-md-right fas fa-ellipsis-v\" @click='toggleNoteOptions(index, n.id)'></button>\n\n                  <div class=\"col-12 \">\n                    <button v-if=\"n.labelText!=''\" class=\"btn  rounded-0 \" :style=\"{color: n.labelColour}\" :title=n.labelText> <i class=\"fas fa-tag\"> <small> {{n.labelText}}</small></i></button>\n                    <button  v-if='n.reminderDate!=null' class=\"btn  darkcyan rounded-0\" :title=n.displayDateTime ><i class=\"fas fa-bell\"><small> {{n.displayDateTime}}</small></i></button>\n                  </div>  \n\n                </template>\n          \n                <template v-if=\"n.isCompleted==true\">\n                  <!-- <button class=\"button_display_text btn btn-light2 left col system\">{{n.text}}  </button>                \n                  <button v-if=\"n.labelText!=''\" class=\" btn btn-light2 left system\" :title=n.labelText> <i class=\"fas fa-tag\"> <small> {{n.labelText}}</small></i></button>\n                  <button v-if=\"n.labelText==''\" class=\" btn btn-light2 left\"  :title=n.labelText></button>\n                  <button  v-if='n.reminderDate!=null' class=\" btn btn-light2 system\" :title=n.displayDateTime ><i class=\"fas fa-bell\"></i> <small>{{n.displayDateTime}}</small>  </button>\n                  <button  v-if='n.reminderDate==null' class=\" btn btn-light2 system\" ><i class=\"fas fa-bell invisible\" ></i></button>                                                       \n                  <button class=\"btn btn-light2 left col-1 green\" @click='markIncomplete(n.id)'><i class=\"fas fa-undo\"></i></button>                  \n                  <button class=\"btn btn-light2 col-1  black\" @click='deleteNote(n.id,complete=true)' ><i class=\"fa fa-trash\"></i></button> -->\n\n                  <button class=\"button_display_text btn background-primary-light left col system rounded-0\">{{n.text}}  </button>             \n                  <button class=\"btn background-primary-light col-2 col-md-1 rounded-0 green\" @click='markIncomplete(n.id)'><i class=\"fas fa-undo\"></i></button>\n                  <button class=\"btn background-primary-light col-2 col-md-1 rounded-0 black\" @click='deleteNote(n.id,complete=true)' ><i class=\"fa fa-trash\"></i></button>            \n                </template>\n            </div>\n    \n           \n          </div>           \n        </template>  \n         \n           \n        <span v-if=\"isNoteOptions\">\n        <!-- <div class=\"row  shadow  button  black top1\">\n          <button class=\"button_display_text btn background-primary-light left col black\" @click='toggleNoteOptions(noteIndex,noteId)'> {{notes[noteIndex].text}}</button>\n          <button class=\"btn green background-green rounded-0 col-12 col-md-1  my-1 my-md-0\" @click='markCompleted(noteId)' ><i class=\"fas fa-check-double\"></i></button>\n          <button class=\"btn primary background-light rounded-0 col-12 col-md-1 my-1 my-md-0 black\" @click='toggleEdit' ><i class=\"far fa-edit\"></i></button>            \n          <button class=\"btn rounded-0 col-12 col-md-1  my-1 my-md-0\" @click='deleteNote(noteId)' ><i class=\"fa fa-trash\"></i></button>            \n        </div>   -->\n          <div class=\"row  shadow  button  black top1\">\n              <!-- <button class=\"btn background-primary-light left col-12 black noteTextButton\" @click='toggleNoteOptions(noteIndex,noteId)'> {{notes[noteIndex].text}}</button> -->\n              <button class=\"btn col-12 text-right fas fa-ellipsis-v\" @click='toggleNoteOptions(noteIndex,noteId)'></button>\n\n              <button class=\"btn green background-green rounded-0 col-12   top1\" @click='markCompleted(noteId)' ><i class=\"fas fa-check-double\"></i></button>\n              <button class=\"btn primary background-light rounded-0 col-12  black\" @click='toggleEdit' ><i class=\"far fa-edit\"></i></button>            \n              <button class=\"btn rounded-0 col-12\" @click='deleteNote(noteId)' ><i class=\"fa fa-trash\"></i></button>                                        \n          </div> \n        </span> \n  \n        <span v-if=\"isEdit\">\n          <div class=\"row  button  black top1\">\n            <input  class=\"col-12 col-md-10 black\" id=\"input_edit\" type=\"text\"  maxlength=\"70\" :value='notes[noteIndex].text'>             \n  \n              <button v-if=\"!enabledLabel\" class=\"col-12 col-md btn \" @click=\"toggleLabel\" ><i class=\"fas fa-tag\"></i></button>            \n              <button v-if=\"!enabledNotification\" class=\"col-12 col-md btn \" @click=\"toggleNotification\" ><i class=\"fas fa-bell\"></i></button>\n          </div>  \n  \n          <div class=\"row top1\">    \n            \n            <button v-if=\"labelText!=''\" class=\"btn btn-light fas fa-tag\" :style=\"{color: labelColour}\" @click='deleteLabel()'><small> {{labelText}} -</small></button>\n            <button v-if='reminderDate!=null' class=\"btn darkcyan left left1\" @click='deleteReminder()' ><i class=\"fas fa-bell\" :title=displayDateTime><small> {{displayDateTime}} <i class=\"fas fa-trash-alt\"></i> </small> </i> </button>\n            \n          </div>  \n                      \n          <div class=\"row\">\n            <button class=\"btn btn-primary2  top1 col-md-2\" @click='saveEdit' >ok</button>            \n            <button class=\"btn btn primary top1 col-md-2  m-md-1\" @click='toggleEdit'>cancel</button>            \n          </div>\n        </span> \n  \n        <transition>\n  \n          <div v-if='enabledLabel' class=\"modalContainer centre\">\n            <div  class=\"col-12 modal1 \">\n  \n              <h2 class=\"col-12 black\"><i class=\"fas fa-tag\"></i> </h2>  \n              \n              <div class=\"col-12 top1 black\"><small><b>Add label</b></small></div>\n              <input class=\"col-10 top1\" type=\"text\" id=\"input_label\"\n              :style=\"{ color: this.colour}\"\n              >   \n              <v-swatches class=\"top1\"\n              v-model=\"colour\"                              \n              shapes=\"circles\"\n                >\n              </v-swatches>\n              <button class=\"col-10 top1 btn btn-light\" @click='addLabel'>ok</button>\n              <button class=\"col-10 top1  btn black \" @click='toggleLabel'>cancel</button>\n              <!-- <button class=\"btn col\">cancel</button> -->             \n            </div>\n          </div>\n        </transition>\n  \n        \n  \n        \n         <transition>\n            <div v-if='enabledNotification' class=\"modalContainer\">\n              <div  class=\"col-12 centre modal1\">\n                <h2 class=\"col-12 black\"><i class=\"fas fa-bell\"></i> </h2> \n                <div class=\"col-12 black\"><small><b>Add Reminder</b></small></div>\n  \n                \n                  <div class=\"col\">\n                    <date-picker\n                      v-model=\"reminderDate\"\n                      type=\"date\"\n                      format='DD-MM-YYYY'\n                      placeholder=\"Reminder date\"\n                      :editable=false\n                      confirm=true\n                      confirm-text='ok'\n                      >\n                        \n                    </date-picker>\n  \n                    \n                  </div>\n  \n                  \n                  <div  class=\"col top2\">\n                    <date-picker \n                      v-model=\"reminderTime\"\n                      type=\"time\"\n                      format='HH:mm'\n                      placeholder=\"Reminder time \"\n                      :editable=false\n                      confirm=true\n                      confirm-text='ok'\n                      :clearable=true\n    \n                      :time-picker-options=\"{\n                        start: '00:00',\n                        step: '00:30',\n                        end: '23:30',\n                      }\"\n                      >\n                        \n                    </date-picker>\n                  </div>     \n                  <div class=\"col-12 top1  red\" v-if=\"timeNull\"><small>Please select reminder time</small></div>\n\n                <button class=\"col-10 top1 btn btn-light primary\" @click='addReminder'>add</button>\n                <button class=\"col-10 top1  btn black\" @click='toggleNotification'>cancel</button>\n                \n              </div>  \n            </div>  \n         </transition>\n        \n     </div>  \n  \n     \n  <div v-if=\"notes.length>1\" class=\"row  top1\">\n      <small class=\"col lightgrey\">scroll to see all notes</small>  \n  </div>\n        \n    <!-- <button class=\"btn btn-danger\" @click='deleteDB'>Delete all notes</button>   -->\n  \n    <!-- <button class=\"btn\" @click='loadData'>read</button>   -->\n  \n  \n  \n  \n    \n  \n  \n    </div>\n  </div>\n</template>\n\n<script>\nimport VSwatches from 'vue-swatches'\nimport 'vue-swatches/dist/vue-swatches.css'\n\nimport DatePicker from 'vue2-datepicker';\nimport 'vue2-datepicker/index.css';\n  \nimport draggable from 'vuedraggable'\n  \n\nexport default {\n  name: 'Main',\n  props: {\n    title: String,\n  },\n  components: { VSwatches,DatePicker,draggable },\n\n    mounted(){\n      this.loadData();\n      this.loadNotifications();\n    },\n\n  data(){\n    return{\n      option:1,\n      notes:[],  \n      notesNoLabel:[],    \n      enableAdd:false,\n      enabledLabel:false,\n      enabledNotification:false,\n      colour:'#000000',\n      labelText:'',\n      labelColour:'',            \n      labels:[],\n      selectedLabel:'All notes',\n      isNoteOptions:false,\n      noteIndex:'',\n      noteId:'',\n      selectedNote:[],\n      reminderDate: null,      \n      reminderTime: null, \n      displayDateTime:'',             \n      dateNull:false,\n      timeNull:false,\n      isEdit:false ,\n\n      isTagSearch:false,\n      isActiveReminder:false,\n      isUpcomingReminder:false,\n      activeReminders:0,\n      upcomingReminders:0,\n      notifications:0,\n      isDraggable:false,\n      \n\n    }\n  },\n\n  methods:{\n    setOption(n){\n        this.option=n;       \n        this.isNoteOptions=false;\n        //show all notes\n        if(n==1){\n          this.loadData();\n          this.isActiveReminder=false;\n          this.isUpcomingReminder=false;\n        }\n        //show notes with reminders\n        if(n==2){\n          \n          this.loadActiveReminders();\n          \n          this.isActiveReminder=true;\n          this.isTagSearch=false;\n        }\n    },\n\n    addNew(){\n      \n      this.enableAdd=true;\n      this.isTagSearch=false;\n      this.isNoteOptions=false;\n      setTimeout(() => {\n        this.$refs.newNoteInput.focus();  \n      }, 200);      \n    },\n\n\n    closeAdd(){\n      this.enableAdd=false;\n      this.labels=[];\n      this.reminderDate= null;        \n      this.reminderTime= null; \n      this.timeNull=false;\n      this.dateNull=false;   \n      this.displayDateTime='';\n\n    },\n\n    toggleLabel(){      \n      this.enabledLabel=!this.enabledLabel;      \n      if(this.enabledLabel){\n        setTimeout(() => {\n        document.getElementById('input_label').focus();  \n        }, 100);\n      }\n      else{\n        setTimeout(() => {\n          if(this.enableAdd){\n            this.$refs.newNoteInput.focus();  \n          }\n          else{\n            document.getElementById('input_edit').focus();\n          }\n        \n        }, 100);\n      }\n    },\n\n    toggleNotification(){      \n      this.enabledNotification=!this.enabledNotification;\n\n      //cancel is clicked\n      if(!this.enabledNotification && this.displayDateTime==''){      \n                \n          this.reminderDate= null;        \n          this.reminderTime= null; \n          this.timeNull=false;\n          this.dateNull=false;   \n      }\n      \n\n    },\n\n    addLabel(){\n      this.labelText=document.getElementById('input_label').value.trim();\n      this.labelColour=this.colour;\n      // let newLabel={labelText:labelText,colour:labelColour};\n\n      // if(labelText.trim()!=''){\n      //     this.labels.push(newLabel);\n      //     this.toggleLabel();\n      //     }\n\n      if(this.labelText!=''){\n          // this.labels.splice(0,1,newLabel);\n          this.toggleLabel();\n          }\n\n      \n      \n    },\n\n    addReminder(){\n      // this.toggleNotification();      \n      if(this.reminderDate!=null && this.reminderTime!=null){\n        this.dateNull=false;\n        this.timeNull=false;\n        this.enabledNotification=!this.enabledNotification;\n\n        //reformat date\n        let fDate=this.reminderDate.toDateString();\n        fDate=fDate.split(' ');\n        fDate=fDate[2]+' '+fDate[1]+' '+fDate[3];\n        let displayDate=fDate;\n\n        //reformat time        \n        let fTime=this.reminderTime.toString();\n        fTime=fTime.split(' ');\n        fTime=fTime[4];\n        fTime=fTime.split(':');\n        fTime=fTime[0]+':'+fTime[1];\n        let displayTime=fTime;\n        this.displayDateTime=displayDate + ' '+displayTime        \n      }\n\n      if(this.reminderDate==null){\n        this.dateNull=true;\n      }\n\n      if(this.reminderTime==null){\n        this.timeNull=true;\n      }    \n    },\n\n    saveNew(){\n      let newNoteText=this.$refs.newNoteInput.value;\n      console.log(this.labels);\n\n      let newNote;\n      newNote={text:newNoteText,\n              reminderDate:this.reminderDate,\n              reminderTime:this.reminderTime,\n              displayDateTime:this.displayDateTime,\n              labelText:this.labelText,\n              labelColour:this.labelColour,\n              isCompleted:false\n              };\n    \n      let self = this;\n      \n      //indexedDB\n      const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;      \n      console.log(indexedDB);      \n      const request= indexedDB.open('todoDatabase',1);\n      \n      //onerror\n      request.onerror=function(event){\n        console.log(event);\n      }\n\n      //onupgradeneeded\n      request.onupgradeneeded=function(event){\n        let db = event.target.result;\n        let objectStore=db.createObjectStore('notes', { keyPath: \"id\", autoIncrement: true });        \n        objectStore.createIndex('labelIndex','note.labelText',{unique:false});  \n        objectStore.createIndex('noteIndex',['note.text'],{unique:false}); \n        objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n        objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});           \n        console.log(\"Object store Created Successfully...\");\n      }\n\n      //onsuccess\n      request.onsuccess = function (event){       \n       var db = event.target.result;\n       console.log(db);\n       var transaction = db.transaction(\"notes\", \"readwrite\");\n       var objectStore = transaction.objectStore(\"notes\");     \n       \n       if(newNoteText.trim()!=''){\n       objectStore.add({ note: newNote});\n        db.close();\n        self.enableAdd=false;\n        self.labelText='',\n        self.labelColour=''\n        \n        self.reminderDate=null;\n        self.reminderTime=null;\n        self.displayDateTime='';\n\n      }\n       transaction.oncomplete = function () {   \n       self.labels=[];\n       self.selectedLabel='All notes';             \n       self.loadData();\n       self.loadNotifications();\n        };\n     }\n\n    },\n\n    toggleNoteOptions(n,id){      \n      \n      this.selectedNote=[];\n      //get selected note's id\n      this.noteId=id;\n\n\n      //set get selected note\n      for(let n of this.notes){\n\n        console.log(n.id);\n        if(n.id==id){\n          this.selectedNote.push(n);\n        }\n      }\n\n      console.log(this.notes);\n      console.log(this.selectedNote);\n      this.noteIndex=n;      \n      this.isNoteOptions=!this.isNoteOptions;\n    },\n\n    deleteNote(id,complete){      \n    //  this.notes.splice(n,1);\n    //  this.isNoteOptions=!this.isNoteOptions;\n\n\n    //delete note from db\n\n    let self=this;\n        const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n        const request = indexedDB.open(\"todoDatabase\", 1);\n      \n        request.onerror = function(){\n            console.log(\"request error deleteNote\");\n        }\n\n        request.onupgradeneeded = function(event) {\n            var db = event.target.result;\n            var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n            objectStore.createIndex('labelIndex','note.labelText',{unique:false});  \n            objectStore.createIndex('noteIndex',['note.text'],{unique:false});\n            objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n            objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});                \n            console.log(\"Object store Created Successfully...\");\n        };\n\n\n        request.onsuccess = function (event){       \n          var db = event.target.result;\n          let transaction = db.transaction('notes','readwrite');\n          const objectStore = transaction.objectStore(\"notes\");\n\n          const deleteNote = objectStore.delete(id);\n          deleteNote.onsuccess = function(){\n          console.log('note id: '+id+ ' deleted');\n          \n         }  \n            \n          transaction.oncomplete = function () {     \n\n            if(self.option==1){\n              if(self.isTagSearch){                  \n                self.selectedLabel='All notes';          \n                self.loadTags();  \n              }\n              else{\n                self.loadData();  \n\n                self.labels=[];\n                  self.reminder=[];\n                  self.reminderDate=null;\n                  self.reminderTime=null;\n                  self.displayDateTime='';\n\n              }   \n            }\n            else if(self.option==2){\n\n              if(self.isActiveReminder){\n                self.loadActiveReminders();\n               }\n               else{\n                self.loadUpcomingReminders();\n               }\n\n            }\n\n            \n            \n            if(complete==true){\n              this.isNoteOptions=false;\n              \n            }\n            else{\n              self.isNoteOptions=!self.isNoteOptions;              \n            }\n            db.close();\n            self.loadNotifications();\n          };\n          \n        }\n\n    },\n\n    toggleEdit(){               \n      this.isEdit=!this.isEdit;\n      this.isNoteOptions=!this.isNoteOptions;\n       \n      setTimeout(() => {\n        if(this.isEdit){\n\n        document.getElementById('input_edit').focus();\n        \n        this.labelText= this.notes[this.noteIndex].labelText;\n        \n        this.labelColour= this.notes[this.noteIndex].labelColour;\n      \n        \n        this.reminderDate=null;\n        this.reminderTime=null;\n\n        this.reminderDate=this.notes[this.noteIndex].reminderDate;\n        this.reminderTime=this.notes[this.noteIndex].reminderTime;\n        this.displayDateTime=this.notes[this.noteIndex].displayDateTime;\n        \n      }\n      }, 100);\n      \n\n    },\n\n    saveEdit(){\n      if(document.getElementById('input_edit').value.trim()!=''){\n\n        //updated field values\n          let text= document.getElementById('input_edit').value.trim();\n          let labelText=this.labelText;\n          let labelColour=this.labelColour;\n          let reminderDate=this.reminderDate;\n          let reminderTime=this.reminderTime;\n          let displayDateTime = this.displayDateTime;\n          \n\n        //save changes to indexedDB\n        let self=this;\n        const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n        const request = indexedDB.open(\"todoDatabase\", 1);\n                        \n        request.onerror = function(){\n            console.log(\"request error - saveEdit\");\n        }\n\n        request.onupgradeneeded = function(event) {\n            var db = event.target.result;\n            var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n            objectStore.createIndex('labelIndex',['note.labelText'],{unique:false});  \n            objectStore.createIndex('noteIndex',['note.text'],{unique:false}); \n            objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n            objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});   \n            \n            console.log(\"Object store Created Successfully...\");\n        };\n\n        \n\n        request.onsuccess = function (event){       \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\",\"readwrite\");\n          const objectStore = transaction.objectStore(\"notes\");\n\n          //get record to modify\n          const recordRequest = objectStore.get(self.noteId);\n\n          \n\n          recordRequest.onsuccess=function(){\n\n            \n            let record = recordRequest.result;\n            console.log(record);    \n                    \n            record.note.text = text;\n            record.note.reminderDate=reminderDate;\n            record.note.reminderTime=reminderTime;\n            record.note.displayDateTime=displayDateTime;            \n            record.note.labelText=labelText;\n            record.note.labelColour=labelColour;\n            record.note.isCompleted=false;\n\n\n            //save new values to indexedDB\n            const updateRequest=objectStore.put(record);\n\n            updateRequest.onsuccess=function(){\n              console.log('record updated');\n            }\n            \n          }\n          transaction.oncomplete = function () {\n            self.labelText='';\n            self.labelColour='';            \n            self.reminderDate=null;\n            self.reminderTime=null;\n            self.displayDateTime='';\n\n            //show all notes (filtered by tag or not)\n            if(self.option==1){\n              if(self.isTagSearch){    \n                if(self.selectedLabel!='All notes'){\n                  self.selectedLabel=labelText;         \n                }  \n                            \n                 self.loadTags();  \n              }\n              else{\n                self.loadData();  \n              }\n            }\n            //show notes with reminders\n            else if (self.option==2){\n               if(self.isActiveReminder){\n                self.loadActiveReminders();\n               }\n               else{\n                self.loadUpcomingReminders();\n               }\n               \n            }\n            self.loadNotifications();                                                      \n            db.close();\n          };\n\n\n          };\n\n      }\n      \n      \n      this.isEdit=!this.isEdit;\n      \n     \n    },\n\n    deleteLabel(){            \n      this.labelText='';\n      this.labelColour='';\n    },\n\n    deleteReminder(){    \n            \n      this.reminderDate=null;\n      this.reminderTime=null;\n      this.displayDateTime='';\n      if(this.notes!=''){\n        this.notes[this.noteIndex].reminder.reminderDate=null;\n        this.notes[this.noteIndex].reminder.reminderTime=null;\n      }\n      \n    },\n\n     toggleTimePanel() {\n      this.showTimePanel = !this.showTimePanel;\n    },\n\n    loadData(){\n      \n        \n        let self=this;\n        const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n        const request = indexedDB.open(\"todoDatabase\", 1);\n        \n        let foundNotes=[];\n        \n        request.onerror = function(){\n            console.log(\"database test creation error\");\n        }\n\n        request.onupgradeneeded = function(event) {\n            var db = event.target.result;\n            var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n            objectStore.createIndex('labelIndex','note.labelText',{unique:false});  \n            objectStore.createIndex('noteIndex',['note.text'],{unique:false});  \n            objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n          objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});  \n            \n            console.log(\"Object store Created Successfully...\");\n        };\n\n\n        request.onsuccess = function (event){       \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\");\n          const objectStore = transaction.objectStore(\"notes\");\n\n            // read through table\n            objectStore.openCursor().onsuccess = event => { \n              var cursor = event.target.result; \n              if (cursor) { \n                console.log('is cursor')\n                  \n                  let record;\n                  \n                     record={id:cursor.value.id,\n                             text:cursor.value.note.text,\n                             labelText:cursor.value.note.labelText,\n                             labelColour:cursor.value.note.labelColour,\n                             reminderDate:cursor.value.note.reminderDate,\n                             reminderTime:cursor.value.note.reminderTime,\n                             displayDateTime:cursor.value.note.displayDateTime,\n                             isCompleted:cursor.value.note.isCompleted\n                             }\n                             \n                  \n                  \n                  console.log(record);\n                  foundNotes.push(record);              \n                  console.log(cursor.value);\n\n                  console.log(\"id: \"+ cursor.value.id);\n                  console.log(\"text: \"+ cursor.value.note.text);\n                  \n                  cursor.continue(); \n              } else { \n                  console.log('end of table');\n              } \n            };\n\n          \n            \n          transaction.oncomplete = function () {\n            console.log(foundNotes);\n            self.notes=[];\n            for(let n of foundNotes){\n              self.notes.push(n);          \n            }\n                                    \n             console.log(self.notes)\n             \n            db.close();\n          };\n\n          \n        }\n\n    \n\n    },\n\n    deleteDB(){\n\n      const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n      \n      indexedDB.deleteDatabase(\"todoDatabase\");      \n      \n    },\n\n    resort(){\n\n      let self =this;\n      \n      this.deleteDB(); \n  \n      const request = indexedDB.open(\"todoDatabase\",1);\n\n      request.onupgradeneeded=function(event){\n        let db = event.target.result;\n        let objectStore=db.createObjectStore('notes', { keyPath: \"id\", autoIncrement: true });        \n        objectStore.createIndex('labelIndex',['note.labelText'],{unique:false});  \n        objectStore.createIndex('noteIndex',['note.text'],{unique:false});  \n        objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n        objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});  \n        \n        console.log(\"Object store Created Successfully...\");\n      }\n\n       request.onsuccess = function (event){       \n       var db = event.target.result;\n       let transaction = db.transaction(\"notes\",\"readwrite\");\n       const objectStore = transaction.objectStore(\"notes\");\n        console.log(objectStore);\n\n      \n\n      self.notes.forEach(function (n) {     \n      let newNote={ \n                   text:n.text,\n                   labelText:n.labelText,\n                   labelColour:n.labelColour,\n                   reminderDate:n.reminderDate,\n                   reminderTime:n.reminderTime,\n                   displayDateTime:n.displayDateTime,\n                   isCompleted:n.isCompleted\n                   \n                   }\n      objectStore.add({ note: newNote});\n      \n      console.log(n.text+'-'+ n.id)          \n          // objectStore.put({id: n, name: \"deevana\",branch: \"CSE\"});\n      })\n \n      transaction.oncomplete = function () {        \n        console.log('resorting updated');\n        \n        self.loadData();\n        db.close();\n\n      };\n\n    \n          \n    }\n\n    },\n\n    toggleTagSearch(){\n      this.isTagSearch=!this.isTagSearch;\n      this.enableAdd=false;\n      this.isNoteOptions=false;\n      if(this.isTagSearch){\n        this.loadTags();\n        \n      }\n      else{\n        this.unloadTags();\n      }\n      \n    }, \n\n    loadLabels(){\n      //populate labels[] with labelText values\n\n      this.labels=[];\n      this.labels.push('All notes');\n\n\n\n      let self=this;\n      const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n      const request = indexedDB.open(\"todoDatabase\", 1);\n              \n      request.onerror = function(){\n            console.log(\"database test creation error\");\n      }\n\n      request.onupgradeneeded = function(event) {\n            var db = event.target.result;\n            var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n            objectStore.createIndex('labelIndex','note.labelText',{unique:false});  \n            objectStore.createIndex('noteIndex',['note.text'],{unique:false});  \n            objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n            objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});  \n            console.log(\"Object store Created Successfully...\");\n        };\n\n\n        request.onsuccess = function (event){   \n          \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\");          \n          const objectStore = transaction.objectStore(\"notes\");\n          let labelIndex = objectStore.index(\"labelIndex\");\n          \n\n          \n\n          let request  = labelIndex.getAll();\n          \n          \n                    \n          request.onsuccess = function(){\n            console.log('success');\n            console.log(request.result);\n            let results= request.result;\n            \n            for(let r of results){\n                            \n               let exists=false;\n                self.labels.forEach(l => {\n                 if(r.note.labelText==l){\n                  exists=true;\n                 } \n                });\n\n                if(exists==false){\n                  \n                  self.labels.push(r.note.labelText);\n                }   \n\n            }            \n            \n         };\n\n          transaction.oncomplete = function () {                                  \n            db.close();\n          };\n        }           \n    },\n\n    \n    loadTags(){\n        \n        this.enableAdd=false;\n        this.notes=[];\n        this.loadLabels();\n\n      \n        \n        let self=this;\n        const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n        const request = indexedDB.open(\"todoDatabase\", 1);\n        \n        \n        \n        request.onerror = function(){\n            console.log(\"database test creation error\");\n        }\n\n        request.onupgradeneeded = function(event) {\n            var db = event.target.result;\n            var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n            objectStore.createIndex('labelIndex','note.labelText',{unique:false});  \n            objectStore.createIndex('noteIndex',['note.text'],{unique:false});  \n            objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n            objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});  \n            console.log(\"Object store Created Successfully...\");\n        };\n\n\n        request.onsuccess = function (event){   \n          \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\");          \n          const objectStore = transaction.objectStore(\"notes\");\n          let labelIndex = objectStore.index(\"labelIndex\");\n          \n\n          let request='';\n          if(self.selectedLabel=='All notes'){\n            request = labelIndex.getAll();\n\n          }\n          else{\n            request = labelIndex.getAll(self.selectedLabel);\n           \n          }\n                    \n          request.onsuccess = function(){\n            console.log('success');\n            console.log(request.result);\n            let results= request.result;\n            console.log(results);\n            for(let r of results){\n              let resultNote={id:r.id,\n                              text:r.note.text,\n                              labelText:r.note.labelText,\n                              labelColour:r.note.labelColour,\n                              reminderDate:r.note.reminderDate,\n                              reminderTime:r.note.reminderTime,\n                              displayDateTime:r.note.displayDateTime,\n                              isCompleted:r.note.isCompleted\n                              }\n\n              \n              \n\n                                         \n                //push note into notes[]\n                self.notes.push(resultNote);\n                console.log(self.notes);\n            }            \n            \n         };\n\n          transaction.oncomplete = function () {                                  \n            db.close();\n          };\n        }\n      console.log('TAGS');\n    },\n\n    unloadTags(){\n      this.loadData();\n      this.labels=[];\n      this.selectedLabel='All notes';\n    },\n\n    //counts how many reminders expired\n    loadNotifications(){\n      this.notifications=0;\n      \n      \n      let self=this;\n      const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n      const request = indexedDB.open(\"todoDatabase\", 1);\n        \n      request.onerror = function(){\n          console.log(\"database test creation error\");\n      }\n\n      request.onupgradeneeded = function(event) {\n          var db = event.target.result;\n          var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n          objectStore.createIndex('labelIndex','note.labelText',{unique:false});  \n          objectStore.createIndex('noteIndex',['note.text'],{unique:false});  \n          objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n          objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});  \n\n          console.log(\"Object store Created Successfully...\");\n      };\n\n\n        request.onsuccess = function (event){   \n          \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\");          \n          const objectStore = transaction.objectStore(\"notes\");\n          let dateIndex = objectStore.index(\"dateIndex\");\n          let request='';\n          request = dateIndex.getAll();\n                      \n          request.onsuccess = function(){\n            console.log('success');\n            console.log(request.result);\n            let results= request.result;\n            console.log(results);\n            \n            \n            let now = new Date();\n            now = now.getTime();\n            \n            \n            \n            for(let r of results){\n\n             //reconstruct date and time to compare it with current date and time   \n             let dateToString=r.note.reminderDate.toString();\n             let actualDate1=dateToString.split(' ');                \n             actualDate1=actualDate1[0]+' '+actualDate1[1]+' '+actualDate1[2]+' '+actualDate1[3];\n\n             let timeToString=r.note.reminderTime.toString();\n             let actualTime1=timeToString.split(' ');                \n             actualTime1=actualTime1[4]+' '+actualTime1[5]+' '+actualTime1[6];\n             \n             let actualDateTime=actualDate1+' '+actualTime1;\n             console.log(actualDateTime);\n\n             //reconvert to Date format\n             actualDateTime=new Date(actualDateTime);\n                                                        \n             //compare with current Date and Time\n             //if reminder has not expired, push note into notes[]\n             if(actualDateTime.getTime()<now){\n              self.notifications++;\n             }\n             \n                                            \n            }            \n            \n         };\n\n          transaction.oncomplete = function () {                                  \n            db.close();\n          };\n        }\n      \n    },\n\n    loadActiveReminders(){\n      this.activeReminders=0;  \n      this.upcomingReminders=0;\n      this.notes=[];\n      let self=this;\n      const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n      const request = indexedDB.open(\"todoDatabase\", 1);\n        \n      request.onerror = function(){\n          console.log(\"database test creation error\");\n      }\n\n      request.onupgradeneeded = function(event) {\n          var db = event.target.result;\n          var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n          objectStore.createIndex('labelIndex','note.labelText',{unique:false});  \n          objectStore.createIndex('noteIndex',['note.text'],{unique:false});  \n          objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n          objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});  \n\n          console.log(\"Object store Created Successfully...\");\n      };\n\n\n        request.onsuccess = function (event){   \n          \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\");          \n          const objectStore = transaction.objectStore(\"notes\");\n          let dateIndex = objectStore.index(\"dateIndex\");\n          let request='';\n          request = dateIndex.getAll();\n                      \n          request.onsuccess = function(){\n            console.log('success');\n            console.log(request.result);\n            let results= request.result;\n            console.log(results);\n            \n            \n            let now = new Date();\n            now = now.getTime();\n            \n            \n            \n            for(let r of results){\n\n             //reconstruct date and time to compare it with current date and time   \n             let dateToString=r.note.reminderDate.toString();\n             let actualDate1=dateToString.split(' ');                \n             actualDate1=actualDate1[0]+' '+actualDate1[1]+' '+actualDate1[2]+' '+actualDate1[3];\n\n             let timeToString=r.note.reminderTime.toString();\n             let actualTime1=timeToString.split(' ');                \n             actualTime1=actualTime1[4]+' '+actualTime1[5]+' '+actualTime1[6];\n             \n             let actualDateTime=actualDate1+' '+actualTime1;\n             console.log(actualDateTime);\n\n             //reconvert to Date format\n             actualDateTime=new Date(actualDateTime);\n\n             \n\n              let resultNote={id:r.id,\n                              text:r.note.text,\n                              labelText:r.note.labelText,\n                              labelColour:r.note.labelColour,\n                              reminderDate:r.note.reminderDate,\n                              reminderTime:r.note.reminderTime,\n                              displayDateTime:r.note.displayDateTime,\n                              isCompleted:r.note.isCompleted\n                              }\n                            \n                \n             //compare with current Date and Time\n             //if reminder has not expired, push note into notes[]\n             if(actualDateTime.getTime()<now){\n              self.notes.push(resultNote);\n              self.activeReminders++;\n              console.log(self.notes);\n             }\n             else{\n              self.upcomingReminders++;\n             }\n                                            \n            }            \n            \n         };\n\n          transaction.oncomplete = function () {                                  \n            db.close();\n          };\n        }\n      \n    },\n\n\n\n    loadUpcomingReminders(){\n\n      this.notes=[];\n      this.upcomingReminders=0;\n      this.activeReminders=0;  \n      \n      let self=this;\n      const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n      const request = indexedDB.open(\"todoDatabase\", 1);\n        \n      request.onerror = function(){\n          console.log(\"database test creation error\");\n      }\n\n      request.onupgradeneeded = function(event) {\n          var db = event.target.result;\n          var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n          objectStore.createIndex('labelIndex','note.labelText',{unique:false});  \n          objectStore.createIndex('noteIndex',['note.text'],{unique:false});  \n          objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n          objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});  \n\n          console.log(\"Object store Created Successfully...\");\n      };\n\n\n        request.onsuccess = function (event){   \n          \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\");          \n          const objectStore = transaction.objectStore(\"notes\");\n          let dateIndex = objectStore.index(\"dateIndex\");\n          let request='';\n          request = dateIndex.getAll();\n                      \n          request.onsuccess = function(){\n            console.log('success');\n            console.log(request.result);\n            let results= request.result;\n            console.log(results);\n            \n            \n            let now = new Date();\n            now = now.getTime();\n            \n            \n            \n            for(let r of results){\n\n             //reconstruct date and time to compare it with current date and time   \n             let dateToString=r.note.reminderDate.toString();\n             let actualDate1=dateToString.split(' ');                \n             actualDate1=actualDate1[0]+' '+actualDate1[1]+' '+actualDate1[2]+' '+actualDate1[3];\n\n             let timeToString=r.note.reminderTime.toString();\n             let actualTime1=timeToString.split(' ');                \n             actualTime1=actualTime1[4]+' '+actualTime1[5]+' '+actualTime1[6];\n             \n             let actualDateTime=actualDate1+' '+actualTime1;\n             console.log(actualDateTime);\n\n             //reconvert to Date format\n             actualDateTime=new Date(actualDateTime);\n\n             \n\n              let resultNote={id:r.id,\n                              text:r.note.text,\n                              labelText:r.note.labelText,\n                              labelColour:r.note.labelColour,\n                              reminderDate:r.note.reminderDate,\n                              reminderTime:r.note.reminderTime,\n                              displayDateTime:r.note.displayDateTime,\n                              isCompleted:r.note.isCompleted\n                              }\n                            \n                \n             //compare with current Date and Time\n             //if reminder has expired, push note into notes[]\n             if(actualDateTime.getTime()>now){\n              self.notes.push(resultNote);\n              self.upcomingReminders++;\n              console.log(self.notes);\n             }\n             else{\n              self.activeReminders++;\n             }\n                                            \n            }            \n            \n         };\n\n          transaction.oncomplete = function () {                                  \n            db.close();\n          };\n        }\n      //\n    },\n\n    toggleReminders(n){\n      \n      if(n==1){\n        this.isActiveReminder=true;\n        this.isUpcomingReminder=false;\n        this.loadActiveReminders();\n      }\n      else{\n        this.isActiveReminder=false;\n        this.isUpcomingReminder=true;\n        this.loadUpcomingReminders();\n      }\n\n      \n\n    },\n\n    //marks note as completed\n    markCompleted(noteId){\n      //\n      \n\n        let self=this;\n        const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n        const request = indexedDB.open(\"todoDatabase\", 1);\n                        \n        request.onerror = function(){\n            console.log(\"request error - markCompleted\");\n        }\n\n        request.onupgradeneeded = function(event) {\n            var db = event.target.result;\n            var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n            objectStore.createIndex('labelIndex',['note.labelText'],{unique:false});  \n            objectStore.createIndex('noteIndex',['note.text'],{unique:false}); \n            objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n            objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});   \n            \n            console.log(\"Object store Created Successfully...\");\n        };\n      \n        request.onsuccess = function (event){       \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\",\"readwrite\");\n          const objectStore = transaction.objectStore(\"notes\");\n\n          //get record to modify\n          const recordRequest = objectStore.get(noteId);\n\n          recordRequest.onsuccess=function(){\n\n            let record = recordRequest.result;\n            console.log(record);    \n                    \n            // record.note.text = text;\n            // record.note.reminderDate=reminderDate;\n            // record.note.reminderTime=reminderTime;\n            // record.note.displayDateTime=displayDateTime;            \n            // record.note.labelText=labelText;\n            // record.note.labelColour=labelColour;\n            record.note.isCompleted=true;\n\n\n            //save new values to indexedDB\n            const updateRequest=objectStore.put(record);\n\n            updateRequest.onsuccess=function(){\n              console.log('record updated');\n            }\n            \n          }\n          transaction.oncomplete = function () {\n          \n            //show all notes (filtered by tag or not)\n            if(self.option==1){\n              if(self.isTagSearch){    \n                if(self.selectedLabel!='All notes'){\n                  self.selectedLabel=self.selectedNote[0].labelText;                           \n                }  \n                            \n                 self.loadTags();  \n              }\n              else{\n                self.loadData();  \n              }\n            }\n            //show notes with reminders\n            else if (self.option==2){\n               if(self.isActiveReminder){\n                self.loadActiveReminders();\n               }\n               else{\n                self.loadUpcomingReminders();\n               }\n               \n            }\n          \n                                                                  \n            db.close();\n            self.isNoteOptions=false;\n          };\n\n\n          };\n\n\n\n\n    },\n\n    markIncomplete(noteId){\n      //\n       let self=this;\n        const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n        const request = indexedDB.open(\"todoDatabase\", 1);\n                        \n        request.onerror = function(){\n            console.log(\"request error - markCompleted\");\n        }\n\n        request.onupgradeneeded = function(event) {\n            var db = event.target.result;\n            var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n            objectStore.createIndex('labelIndex',['note.labelText'],{unique:false});  \n            objectStore.createIndex('noteIndex',['note.text'],{unique:false}); \n            objectStore.createIndex('dateIndex',['note.reminderDate'],{unique:false});  \n            objectStore.createIndex('timeIndex',['note.reminderTime'],{unique:false});   \n            \n            console.log(\"Object store Created Successfully...\");\n        };\n      \n        request.onsuccess = function (event){       \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\",\"readwrite\");\n          const objectStore = transaction.objectStore(\"notes\");\n\n          //get record to modify\n          const recordRequest = objectStore.get(noteId);\n\n          recordRequest.onsuccess=function(){\n\n            let record = recordRequest.result;\n            console.log(record);    \n                    \n            record.note.isCompleted=false;\n\n\n            //save new values to indexedDB\n            const updateRequest=objectStore.put(record);\n\n            updateRequest.onsuccess=function(){\n              console.log('record updated');\n            }\n            \n          }\n          transaction.oncomplete = function () {\n            \n\n            //show all notes (filtered by tag or not)\n            if(self.option==1){\n              if(self.isTagSearch){    \n                console.log(self.selectedLabel);      \n                if(self.selectedLabel!='All notes'){\n                  // self.selectedLabel=self.labelText; \n                  // console.log(self.selectedLabel);                     \n                }  \n                            \n                 self.loadTags();  \n              }\n              else{\n                self.loadData();  \n              }\n            }\n            //show notes with reminders\n            else if (self.option==2){\n               if(self.isActiveReminder){\n                self.loadActiveReminders();\n               }\n               else{\n                self.loadUpcomingReminders();\n               }\n               \n            }\n                                                                  \n            db.close();\n            self.isNoteOptions=false;\n          };\n\n\n          };\n    },\n\n    toggleDraggable(){\n      this.isDraggable=!this.isDraggable;\n    }\n\n\n  }\n\n}\n</script>\n\n\n"]}]}