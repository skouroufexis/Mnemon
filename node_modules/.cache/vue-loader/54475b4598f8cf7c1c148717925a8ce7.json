{"remainingRequest":"/Users/stavros/Documents/web/todo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/stavros/Documents/web/todo/src/components/Main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/stavros/Documents/web/todo/src/components/Main.vue","mtime":1699915466482},{"path":"/Users/stavros/Documents/web/todo/node_modules/cache-loader/dist/cjs.js","mtime":1694974234613},{"path":"/Users/stavros/Documents/web/todo/node_modules/babel-loader/lib/index.js","mtime":1694974236369},{"path":"/Users/stavros/Documents/web/todo/node_modules/cache-loader/dist/cjs.js","mtime":1694974234613},{"path":"/Users/stavros/Documents/web/todo/node_modules/vue-loader/lib/index.js","mtime":1694974238803}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Main.vue"],"names":[],"mappings":";AAuSA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;AAIA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;AAQA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;;;AAIA;;AAEA;;AAEA;;AAEA;;AAEA;;;;;;;;AAQA;;AAEA","file":"Main.vue","sourceRoot":"src/components","sourcesContent":["\n\n\n\n<template>\n  <div class='container'>\n    \n    <h1 class=\"row\"><span class='section-title'>My notes</span></h1>\n\n    <div class=\"row top2 mainContainer  border\">\n        <button v-if='option==1' class=\"col-1 btn btn-primary\" @click='setOption(1)'><i class=\"far fa-sticky-note\"></i></button>\n        <button v-if='option!=1' class=\"col-1 btn btn-light\" @click='setOption(1)'><i class=\"far fa-sticky-note\"></i></button>\n\n        <button v-if='option==2' class=\"col-1 left1 btn btn-primary\" @click='setOption(2)'><i class=\"fas fa-history\"></i></button>\n        <button v-if='option!=2' class=\"col-1 left1 btn btn-light\" @click='setOption(2)'><i class=\"fas fa-history\"></i></button>\n\n        <button v-if='option==3' class=\"col-1 left1 btn btn-primary\" @click='setOption(3)'><i class=\"fas fa-bell\"></i></button>\n        <button v-if='option!=3' class=\"col-1 left1 btn btn-light\" @click='setOption(3)'><i class=\"fas fa-bell\"></i></button>\n    </div>\n\n\n   <div v-if=\"option==1\"  class=\"row top2 mainContainer\">\n      <button class=\"btn btn-primary2 fas fa-plus \" @click='addNew'></button>\n      <button class=\"left1 btn black fas fa-sort-amount-up \"></button>\n      <button class=\"left1 btn black fas fa-sort-amount-down \"></button>\n      <button class=\"left1 btn black\">filter</button>\n      <button class=\"left1 btn black \"><i class=\"fas fa-tag\"></i> group</button>   \n   </div> \n\n   <div v-if=\"option==1 && enableAdd\"  class=\"row top1 mainContainer\">\n      <input v-if='enableAdd' class=\"col-10 black\"  type=\"text\" ref=\"newNoteInput\">  \n      \n      \n      <button v-if=\"!enabledLabel\" class=\"col-12 col-md btn \" @click='toggleLabel' ><i class=\"fas fa-tag\"></i></button>      \n      <!-- <button v-if=\"enabledLabel\"  class=\"col-12 col-md btn border-bottom \" @click='toggleLabel' ><i class=\"fas fa-tag\"></i></button>       -->\n      <!-- <button v-if=\"enabledNotification\" class=\"col-12 col-md btn invisible \">aaa</button> -->\n      <button v-if=\"!enabledNotification\" class=\"col-12 col-md btn \" @click='toggleNotification' ><i class=\"fas fa-bell\"></i></button>\n      \n\n      <transition>\n        <div v-if='enabledLabel' class=\"modalContainer centre\">\n          <div  class=\"col-12 modal1 \">\n\n            <h2 class=\"col-12 black\"><i class=\"fas fa-tag\"></i> </h2>  \n            \n            <div class=\"col-12 top1 black\"><small><b>Add label</b></small></div>\n            <input class=\"col-10 top1\" type=\"text\" id=\"input_label\"\n            :style=\"{ color: this.colour}\"\n            >   \n            <v-swatches class=\"top1\"\n            v-model=\"colour\"                              \n            shapes=\"circles\"\n              >\n            </v-swatches>\n            <button class=\"col-10 top1 btn btn-light\" @click='addLabel'>ok</button>\n            <button class=\"col-10 top1  btn black \" @click='toggleLabel'>cancel</button>\n            <!-- <button class=\"btn col\">cancel</button> -->             \n          </div>\n        </div>\n      </transition>\n\n      <div class=\"col-12 top1\">    \n              \n          <button v-for=\"(l, index) in labels\" :key=\"index\" class=\"btn btn-light fas fa-tag\" :style=\"{color: l.colour}\" @click='deleteLabel(index)'><small> {{l.labelText}} -</small></button>\n          <button v-if=\"reminderDate!=null\" class=\"btn blue left1\" @click=\"deleteReminder\" :title=displayDateTime> <i class=\"fas fa-bell\"></i> -</button>          \n      </div>\n\n      \n\n       <transition>\n          <div v-if='enabledNotification' class=\"modalContainer\">\n            <div  class=\"col-12 centre modal1\">\n              <h2 class=\"col-12 black\"><i class=\"fas fa-bell\"></i> </h2> \n              <div class=\"col-12 black\"><small><b>Add Reminder</b></small></div>\n\n              \n                <div class=\"col\">\n                  <date-picker id=\"datePicker\"\n                    v-model=\"reminderDate\"\n                    type=\"date\"\n                    format='DD-MM-YYYY'\n                    placeholder=\"Reminder date\"\n                    :editable=false\n                    confirm=true\n                    confirm-text='ok'\n                    >\n                      \n                  </date-picker>\n                </div>\n\n                <div v-if=\"reminderDate!=null\" class=\"col top2\" >\n\n                  <!-- time picker -->\n                  <date-picker id=\"timePicker\"\n                    v-model=\"reminderTime\"\n                    type=\"time\"\n                    format='HH:mm'\n                    placeholder=\"Reminder time \"\n                    :editable=false\n                    confirm=true\n                    confirm-text='ok'\n                    :clearable=true\n  \n                    :time-picker-options=\"{\n                      start: '00:00',\n                      step: '00:30',\n                      end: '23:30',\n                    }\"\n                    >    \n                  </date-picker>\n\n                  <!-- no time selected -->\n                  \n                </div>   \n\n                <div class=\"col-12 top1  red\" v-if=\"timeNull\"><small>Please select reminder time</small></div>                       \n\n              <button class=\"col-10 top1 btn btn-light primary\" @click='addReminder'>add</button>\n              <button class=\"col-10 top1  btn black\" @click='toggleNotification'>cancel</button>\n            </div>  \n          </div>  \n       </transition>\n      \n      <button v-if=\"!this.enabledLabel && !this.enabledNotification\" class=\"col-12 top2 btn btn-primary\" @click='saveNew'>add</button>\n      <button v-if=\"!this.enabledLabel && !this.enabledNotification\"  class=\"col-12 top2 btn btn-primary2 black\" @click='closeAdd'>cancel</button>\n   </div> \n\n   <div v-if=\"option==1 && !enableAdd\" id=\"notesContainer\" class=\"container top1\" >\n      <span v-if=\"!isNoteOptions && !isEdit\">\n        <div class=\"row  button  black top1\" v-for=\"(n,index) in notes\" :key=\"index\">\n          \n          <button class=\"btn btn-light2 left col black\" @click='toggleNoteOptions(index, n.id)'>{{n.text}}</button>\n          <button v-for='(l, index) in n.labels' :key='index' class=\"btn btn-light2 left\" :style=\"{color: l.colour}\" :title=l.labelText> <i class=\"fas fa-tag\"></i></button>\n          <button v-if='n.reminder.reminderDate!=null' class=\"btn btn-light2\" ><i class=\"fas fa-bell\" :title=n.reminder.displayReminder></i></button>\n          <!-- <button v-if='n.reminder.reminder!=\"\"' class=\"btn btn-light2 left\" ><i class=\"fas fa-bell\"></i></button> -->\n\n\n          \n        </div>   \n        \n      </span>\n      \n\n       <span v-if=\"isNoteOptions\">\n          <div class=\"row  shadow  button  black top1\">\n            <button class=\"btn  left col black\" @click='toggleNoteOptions(noteIndex,noteId)'> {{notes[noteIndex].text}}</button>\n            <button class=\"btn  col col-md-2  green\" ><i class=\"fas fa-check\"></i> <small> completed</small></button>\n            <button class=\"btn  col-1  black\" @click='toggleEdit' ><i class=\"far fa-edit\"></i></button>            \n            <button class=\"btn  col-1  black\" @click='deleteNote(noteId)' ><i class=\"fas fa-times\"></i></button>            \n            <!-- <button v-for='(l, index) in n.labels' :key='index' class=\"btn btn-light2 left\" :style=\"{color: l.colour}\" :title=l.labelText> <i class=\"fas fa-tag\"></i></button>         -->            \n          </div>  \n        </span> \n\n        <span v-if=\"isEdit\">\n          <div class=\"row  button  black top1\">\n            <input  class=\"col-10 black\" id=\"input_edit\" type=\"text\" :value='notes[noteIndex].text'>             \n\n             <button v-if=\"!enabledLabel\" class=\"col-12 col-md btn \" @click=\"toggleLabel\" ><i class=\"fas fa-tag\"></i></button>            \n             <button v-if=\"!enabledNotification\" class=\"col-12 col-md btn \" @click=\"toggleNotification\" ><i class=\"fas fa-bell\"></i></button>\n          </div>  \n\n          <div class=\"row top1\">    \n            \n            <button v-for=\"(l, index) in labels\" :key=\"index\" class=\"btn btn-light fas fa-tag\" :style=\"{color: l.colour}\" @click='deleteLabel(index)'><small> {{l.labelText}} -</small></button>\n            <button v-if='reminderDate!=null' class=\"btn btn-light2 left left1\" @click='deleteReminder()' ><i class=\"fas fa-bell\" :title=displayDateTime> -</i></button>\n            \n          </div>  \n\n          \n          \n          <div class=\"row\">\n            <button class=\"btn btn-primary2  top1 col-2\" @click='saveEdit' >ok</button>            \n            <button class=\"btn btn primary top1 col-2 left1\" @click='toggleEdit'>cancel</button>            \n          </div>\n        </span> \n\n        <transition>\n        <div v-if='enabledLabel' class=\"modalContainer centre\">\n          <div  class=\"col-12 modal1 \">\n\n            <h2 class=\"col-12 black\"><i class=\"fas fa-tag\"></i> </h2>  \n            \n            <div class=\"col-12 top1 black\"><small><b>Add label</b></small></div>\n            <input class=\"col-10 top1\" type=\"text\" id=\"input_label\"\n            :style=\"{ color: this.colour}\"\n            >   \n            <v-swatches class=\"top1\"\n            v-model=\"colour\"                              \n            shapes=\"circles\"\n              >\n            </v-swatches>\n            <button class=\"col-10 top1 btn btn-light\" @click='addLabel'>ok</button>\n            <button class=\"col-10 top1  btn black \" @click='toggleLabel'>cancel</button>\n            <!-- <button class=\"btn col\">cancel</button> -->             \n          </div>\n        </div>\n      </transition>\n\n      \n\n      \n       <transition>\n          <div v-if='enabledNotification' class=\"modalContainer\">\n            <div  class=\"col-12 centre modal1\">\n              <h2 class=\"col-12 black\"><i class=\"fas fa-bell\"></i> </h2> \n              <div class=\"col-12 black\"><small><b>Add Reminder</b></small></div>\n\n              \n                <div class=\"col\">\n                  <date-picker\n                    v-model=\"reminderDate\"\n                    type=\"date\"\n                    format='DD-MM-YYYY'\n                    placeholder=\"Reminder date\"\n                    :editable=false\n                    confirm=true\n                    confirm-text='ok'\n                    >\n                      \n                  </date-picker>\n\n                  \n                </div>\n\n                \n                <div  class=\"col top2\">\n                  <date-picker \n                    v-model=\"reminderTime\"\n                    type=\"time\"\n                    format='HH:mm'\n                    placeholder=\"Reminder time \"\n                    :editable=false\n                    confirm=true\n                    confirm-text='ok'\n                    :clearable=true\n  \n                    :time-picker-options=\"{\n                      start: '00:00',\n                      step: '00:30',\n                      end: '23:30',\n                    }\"\n                    >\n                      \n                  </date-picker>\n                </div>                          \n              <button class=\"col-10 top1 btn btn-light primary\" @click='addReminder'>add</button>\n              <button class=\"col-10 top1  btn black\" @click='toggleNotification'>cancel</button>\n              \n            </div>  \n          </div>  \n       </transition>\n\n       <!-- <div class=\"col-12 top1\">          \n          <button v-for=\"(l, index) in labels\" :key=\"index\" class=\"left1 btn btn-light fas fa-tag\" :style=\"{color: l.colour}\" @click='deleteLabel(index)'><small> {{l.labelText}} -</small></button>\n      </div> -->\n        \n\n   </div> \n\n   <div v-if=\"notes.length>4\" class=\"row\">\n    <small class=\"col lightgrey\">scroll to see all notes</small>  \n   </div>\n\n\n\n   <div v-if=\"option==3\"  class=\"row top1 mainContainer\">      \n      <button class=\"btn\">Active</button>  \n      <button class=\"btn\">Upcoming</button>  \n   </div>         \n\n  <draggable class=\"container border\" v-model=\"names\"   :list=\"list\" @end=\"onEnd\">\n    \n   <div class=\" col-12 btn btn-light top1\" v-for=\"(n,index) in names\" :key=\"index\">{{index}} {{ n}}</div>\n  </draggable>\n  \n  <button class=\"btn\" @click='deleteDB'>delete</button>  \n\n  <button class=\"btn\" @click='loadData'>read</button>  \n\n\n\n\n  \n\n\n  </div>\n\n\n\n  \n    \n  \n</template>\n\n<script>\nimport VSwatches from 'vue-swatches'\nimport 'vue-swatches/dist/vue-swatches.css'\n\nimport DatePicker from 'vue2-datepicker';\nimport 'vue2-datepicker/index.css';\n  \nimport draggable from 'vuedraggable'\n  \n\nexport default {\n  name: 'Main',\n  props: {\n    title: String,\n  },\n  components: { VSwatches,DatePicker,draggable },\n\n    mounted(){\n      this.loadData();\n    },\n\n  data(){\n    return{\n      option:1,\n      notes:[],\n      enableAdd:false,\n      enabledLabel:false,\n      enabledNotification:false,\n      colour:'#000000',\n      labels:[],\n      reminder:[],\n      isNoteOptions:false,\n      noteIndex:'',\n      noteId:'',\n      selectedNote:[],\n      reminderDate: null,      \n      reminderTime: null, \n      displayDateTime:'',             \n      dateNull:false,\n      timeNull:false,\n      isEdit:false ,\n\n\n      names:['shari','giulibabol','eleonora']\n\n\n    }\n  },\n\n  methods:{\n    setOption(n){\n        this.option=n;        \n    },\n\n    addNew(){\n      this.enableAdd=true;\n      setTimeout(() => {\n        this.$refs.newNoteInput.focus();  \n      }, 200);      \n    },\n\n\n    closeAdd(){\n      this.enableAdd=false;\n      this.labels=[];\n      this.reminderDate= null;        \n      this.reminderTime= null; \n      this.timeNull=false;\n      this.dateNull=false;   \n      this.displayDateTime='';\n\n    },\n\n    toggleLabel(){      \n      this.enabledLabel=!this.enabledLabel;      \n      if(this.enabledLabel){\n        setTimeout(() => {\n        document.getElementById('input_label').focus();  \n        }, 100);\n      }\n      else{\n        setTimeout(() => {\n          if(this.enableAdd){\n            this.$refs.newNoteInput.focus();  \n          }\n          else{\n            document.getElementById('input_edit').focus();\n          }\n        \n        }, 100);\n      }\n    },\n\n    toggleNotification(){      \n      this.enabledNotification=!this.enabledNotification;\n\n      //cancel is clicked\n      if(!this.enabledNotification && this.displayDateTime==''){      \n                \n          this.reminderDate= null;        \n          this.reminderTime= null; \n          this.timeNull=false;\n          this.dateNull=false;   \n      }\n      \n\n    },\n\n    addLabel(){\n      let labelText=document.getElementById('input_label').value;\n      let labelColour=this.colour;\n      let newLabel={labelText:labelText,colour:labelColour};\n\n      if(labelText.trim()!=''){\n          this.labels.push(newLabel);\n          this.toggleLabel();\n          }\n\n      // if(this.enableAdd){\n      //     if(labelText.trim()!=''){\n      //     this.labels.push(newLabel);\n      //     this.toggleLabel();\n      //     }\n      // }\n      \n\n      // if(this.isEdit){\n\n      //  if(labelText.trim()!=''){\n      //     this.labels=[];\n      //     for(let l of  this.notes[this.noteIndex].labels){\n      //      this.labels.push(l);\n      //     }\n      //     this.labels.push(newLabel);  \n      //     this.toggleLabel();\n      //   }   \n       \n      // }\n      \n    },\n\n    addReminder(){\n      // this.toggleNotification();\n      \n      if(this.reminderDate!=null && this.reminderTime!=null){\n        this.dateNull=false;\n        this.timeNull=false;\n        this.enabledNotification=!this.enabledNotification;\n\n        //reformat date\n        let fDate=this.reminderDate.toDateString();\n        fDate=fDate.split(' ');\n        fDate=fDate[2]+' '+fDate[1]+' '+fDate[3];\n        let displayDate=fDate;\n\n        //reformat time        \n        let fTime=this.reminderTime.toString();\n        fTime=fTime.split(' ');\n        fTime=fTime[4];\n        fTime=fTime.split(':');\n        fTime=fTime[0]+':'+fTime[1];\n        let displayTime=fTime;\n\n\n        this.displayDateTime=displayDate + ' '+displayTime\n\n        \n\n      }\n\n      if(this.reminderDate==null){\n        this.dateNull=true;\n      }\n\n      if(this.reminderTime==null){\n        this.timeNull=true;\n      }\n    \n    },\n\n    saveNew(){\n      let newNoteText=this.$refs.newNoteInput.value;\n\n      let newNote={text:newNoteText,reminder:{reminderDate:this.reminderDate,reminderTime:this.reminderTime,displayReminder:this.displayDateTime},labels:this.labels}\n\n      let self = this;\n      // if(newNoteText.trim()!=''){\n      //   this.notes.push(newNote);\n      //   this.enableAdd=false;\n      //   this.labels=[];\n\n      // }\n      //indexedDB\n      const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;      \n      console.log(indexedDB);      \n      const request= indexedDB.open('todoDatabase',1);\n      \n      //onerror\n      request.onerror=function(event){\n        console.log(event);\n      }\n\n      //onupgradeneeded\n      request.onupgradeneeded=function(event){\n        let db = event.target.result;\n        let objectStore=db.createObjectStore('notes', { keyPath: \"id\", autoIncrement: true });        \n        objectStore.createIndex('labelIndex',['labels'],{unique:false});\n        console.log(\"Object store Created Successfully...\");\n      }\n\n      //onsuccess\n      request.onsuccess = function (event){       \n       var db = event.target.result;\n       console.log(db);\n       var transaction = db.transaction(\"notes\", \"readwrite\");\n       var objectStore = transaction.objectStore(\"notes\");     \n       \n       if(newNoteText.trim()!=''){\n       objectStore.add({ note: newNote});\n        db.close();\n        self.enableAdd=false;\n        self.labels=[];\n        self.reminder=[];\n        self.reminderDate=null;\n        self.reminderTime=null;\n        self.displayDateTime='';\n\n      }\n       transaction.oncomplete = function () {                \n        self.loadData();\n        };\n     }\n\n    },\n\n    toggleNoteOptions(n,id){      \n      \n      this.selectedNote=[];\n      //get selected note's id\n      this.noteId=id;\n\n\n      //set get selected note\n      for(let n of this.notes){\n\n        console.log(n.id);\n        if(n.id==id){\n          this.selectedNote.push(n);\n        }\n      }\n\n      console.log(this.notes);\n      console.log(this.selectedNote);\n      this.noteIndex=n;      \n      this.isNoteOptions=!this.isNoteOptions;\n    },\n\n    deleteNote(id){      \n    //  this.notes.splice(n,1);\n    //  this.isNoteOptions=!this.isNoteOptions;\n\n\n    //delete note from db\n\n    let self=this;\n        const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n        const request = indexedDB.open(\"todoDatabase\", 1);\n      \n        request.onerror = function(){\n            console.log(\"request error deleteNote\");\n        }\n\n        request.onupgradeneeded = function(event) {\n            var db = event.target.result;\n            var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n            objectStore.createIndex('labelIndex',['labels'],{unique:false});\n            console.log(\"Object store Created Successfully...\");\n        };\n\n\n        request.onsuccess = function (event){       \n          var db = event.target.result;\n          let transaction = db.transaction('notes','readwrite');\n          const objectStore = transaction.objectStore(\"notes\");\n\n          const deleteNote = objectStore.delete(id);\n          deleteNote.onsuccess = function(){\n          console.log('note id: '+id+ ' deleted');\n          \n         }  \n            \n          transaction.oncomplete = function () {            \n            self.loadData();\n            self.isNoteOptions=!self.isNoteOptions;\n\n            self.labels=[];\n            self.reminder=[];\n            self.reminderDate=null;\n            self.reminderTime=null;\n            self.displayDateTime='';\n            \n            db.close();\n          };\n          \n        }\n\n    },\n\n    toggleEdit(){               \n      this.isEdit=!this.isEdit;\n      this.isNoteOptions=!this.isNoteOptions;\n      \n      setTimeout(() => {\n        if(this.isEdit){\n        document.getElementById('input_edit').focus();\n        \n        this.labels=[];\n        for(let l of this.notes[this.noteIndex].labels){\n          this.labels.push(l);\n        }\n\n        this.reminderDate=null;\n        this.reminderTime=null;\n\n        this.reminderDate=this.notes[this.noteIndex].reminder.reminderDate;\n        this.reminderTime=this.notes[this.noteIndex].reminder.reminderTime;\n        this.displayDateTime=this.notes[this.noteIndex].reminder.displayReminder;\n        console.log(this.notes[this.noteIndex]);\n        console.log(this.displayDateTime)\n      }\n      }, 100);\n      \n\n    },\n\n    saveEdit(){\n      if(document.getElementById('input_edit').value.trim()!=''){\n\n        //updated field values\n          let text= document.getElementById('input_edit').value.trim();\n          let labels=this.labels;\n          let reminder={displayReminder:this.displayDateTime,reminderDate:this.reminderDate,reminderTime:this.reminderTime};\n\n        //save changes to indexedDB\n\n        let self=this;\n        const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n        const request = indexedDB.open(\"todoDatabase\", 1);\n                        \n        request.onerror = function(){\n            console.log(\"request error - saveEdit\");\n        }\n\n        request.onupgradeneeded = function(event) {\n            var db = event.target.result;\n            var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n            objectStore.createIndex('labelIndex',['labels'],{unique:false});\n            objectStore.createIndex('idIndex',['id'],{unique:true});\n            console.log(\"Object store Created Successfully...\");\n        };\n\n        \n\n        request.onsuccess = function (event){       \n          var db = event.target.result;\n          let transaction = db.transaction(\"notes\",\"readwrite\");\n          const objectStore = transaction.objectStore(\"notes\");\n\n          //get record to modify\n          const recordRequest = objectStore.get(self.noteId);\n\n          \n\n          recordRequest.onsuccess=function(){\n\n            \n            let record = recordRequest.result;\n            console.log(record);    \n                    \n            record.note.text = text;\n            record.note.reminder=reminder;\n            record.note.labels=labels;\n\n            //save new values to indexedDB\n            const updateRequest=objectStore.put(record);\n\n            updateRequest.onsuccess=function(){\n              console.log('record updated');\n            }\n            \n          }\n          transaction.oncomplete = function () {\n            self.labels=[];  \n            self.labels=[];\n            self.reminder=[];\n            self.reminderDate=null;\n            self.reminderTime=null;\n            self.displayDateTime='';\n            self.loadData();                                  \n            db.close();\n          };\n\n\n          };\n\n          \n\n\n\n\n\n        // this.notes[this.noteIndex].text=document.getElementById('input_edit').value.trim();\n        \n        // this.notes[this.noteIndex].labels=[];\n        // for (let l of this.labels){\n        //   this.notes[this.noteIndex].labels.push(l);\n        // }\n        \n        // this.labels=[];\n        //add alerts\n        \n        // this.notes[this.noteIndex].reminder={reminderDate:this.reminderDate,reminderTime:this.reminderTime};        \n      }\n      \n      \n      this.isEdit=!this.isEdit;\n      // this.isNoteOptions=!this.isNoteOptions;\n     \n    },\n\n    deleteLabel(n){            \n      this.labels.splice(n,1);\n    },\n\n    deleteReminder(){    \n            \n      this.reminderDate=null;\n      this.reminderTime=null;\n\n      if(this.notes!=''){\n        this.notes[this.noteIndex].reminder.reminderDate=null;\n        this.notes[this.noteIndex].reminder.reminderTime=null;\n      }\n      \n    },\n\n\n\n    deleteNoteLabel(n){\n      this.notes[this.noteIndex].labels.splice(n,1);\n    },\n\n     toggleTimePanel() {\n      this.showTimePanel = !this.showTimePanel;\n    },\n\n    loadData(){\n        this.notes=[];\n        let self=this;\n        const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n        \n        const request = indexedDB.open(\"todoDatabase\", 1);\n        \n        let notes=[];\n        \n        request.onerror = function(){\n            console.log(\"database test creation error\");\n        }\n\n        request.onupgradeneeded = function(event) {\n            var db = event.target.result;\n            var objectStore = db.createObjectStore(\"notes\",{keyPath :\"id\",  autoIncrement:true});\n            objectStore.createIndex('labelIndex',['labels'],{unique:false});\n            console.log(\"Object store Created Successfully...\");\n        };\n\n\n        request.onsuccess = function (event){       \n          var db = event.target.result;\n          let transaction = db.transaction([\"notes\"]);\n          const objectStore = transaction.objectStore(\"notes\");\n\n            // read through table\n            objectStore.openCursor().onsuccess = event => { \n              var cursor = event.target.result; \n              if (cursor) { \n                console.log('is cursor')\n                  // student.push(cursor.value); \n\n                  let record={id:cursor.value.id,text:cursor.value.note.text,labels:cursor.value.note.labels,\n                              reminder:cursor.value.note.reminder}\n                  console.log(record);\n                  notes.push(record);              \n                  console.log(cursor.value);\n\n                  console.log(\"id: \"+ cursor.value.id);\n                  console.log(\"text: \"+ cursor.value.note.text);\n                  \n                  cursor.continue(); \n              } else { \n                  console.log('end of table');\n              } \n            };\n\n          \n            \n          transaction.oncomplete = function () {\n            console.log(notes);\n            self.notes=notes;\n\n            console.log(self.notes)\n            db.close();\n          };\n\n          \n        }\n\n    \n\n    },\n\n    deleteDB(){\n\n      const indexedDB = window.indexedDB || window.mozIndexedDB ||window.webkitIndexedDB ||window.msIndexedDB ||window.shimIndexedDB;\n      \n      indexedDB.deleteDatabase(\"todoDatabase\");      \n      \n    }\n\n\n\n\n    \n\n   \n  }\n\n}\n</script>\n\n\n"]}]}